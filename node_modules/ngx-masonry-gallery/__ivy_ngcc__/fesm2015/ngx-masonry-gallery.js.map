{"version":3,"file":"ngx-masonry-gallery.js","sources":["ngx-masonry-gallery/lib/utilities.ts","ngx-masonry-gallery/lib/masonry-gallery.component.ts","ngx-masonry-gallery/lib/masonry-gallery.module.ts","ngx-masonry-gallery/lib/masonry-gallery-models.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,MAAa,SAAS;AACtB;AAAS;AACG;AAAS,IADjB,OAAO;AACX,QAAO,OAAO,sCAAsC,CAAC,OAAO,CAAC,OAAO;AAAQ;AAC7D;AAAwB;AAAa,QADkB,UAAU,CAAC;AACjF;AACC;AAA8B,kBAAd,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC;AAAG;AAA8B,kBAA/B,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;AAC/E,YAAW,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACjC,SAAQ,EAAC,CAAC;AACV,KAAI;AACJ,CAAC;AACD;AACA,IAAW,SAAS,GAAG,IAAI,SAAS,EAAE;AAAE;AACxC;AAAK;AAAmC;AAAsH;ACX9J,MAuBa,uBAAuB;AAClC;AAAS;AAA4B;AAAS,IAqB5C,YAAoB,QAAmB;AAAK,QAAxB,aAAQ,GAAR,QAAQ,CAAW;AAAE,QApBhC,WAAM,GAA2B,EAAE,CAAC;AACjD,QAAa,UAAK,GAAW,GAAG,CAAC;AACjC,QAAa,WAAM,GAAW,CAAC,CAAC;AAChC,QAAa,mBAAc,GAAW,CAAC,CAAC;AACxC,QAAa,iBAAY,GAAa,EAAE,CAAC;AACzC,QACc,eAAU,GAAG,IAAI,YAAY,EAAwB,CAAC;AACpE,QAAc,mBAAc,GAAG,IAAI,YAAY,EAAS,CAAC;AACzD,QAAc,mBAAc,GAAG,IAAI,YAAY,EAAS,CAAC;AACzD,QACoB,gBAAW,GAAW,SAAS,CAAC,OAAO,EAAE,CAAC;AAC9D,QACqB,8BAAyB,GAAG,aAAa,IAAI,CAAC,WAAW,EAAE,CAAC;AACjF,QAAqB,iBAAY,GAAkB,EAAE,CAAC;AACtD,QAIY,cAAS,GAAY,KAAK,CAAC;AACvC,KACgD;AAChD;AACO;AAA2B;AAC7B;AAAS,IADV,WAAW,CAAC,OAAsB;AAAK,QACnC,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE;AAC3D,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACjC;AACA,gBAAgB,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;AAChD,aAAa;AAAE,iBAAI;AACnB,gBAAgB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC5C,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACO;AACP;AAAS,IADL,WAAW;AAAM,QACb,IAAI,IAAI,CAAC,KAAK,EAAE;AACxB,YAAY,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AACjC,SAAS;AACT,KAAK;AACL;AACO;AAAyB;AAAoB;AAC7C,IADH,WAAW,CAAC,KAA2B;AAAK,QACxC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpC,KAAK;AACL;AACO;AAAoB;AACtB,IADD,eAAe;AAAM,QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;AAC3B;AAC6B,QACrB,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACnC,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACtD,YAAY,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;AAC9C,SAAS;AACT,KAAK;AACL;AACO;AAA0B;AAAoB;AAC9C,IADH,SAAS,CAAC,MAA8B;AAAK,QACzC,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AACzC,YAAY,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;AAC5C,SAAS;AACT,KAAK;AACL;AACO;AAA0B;AAAoB;AACjD,IADA,YAAY,CAAC,MAA8B;AAAK,QAC5C,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AACzC,YAAY,MAAM,CAAC,OAAO;AAAO;AACN;AACzB;AACA,YAHyB,KAAK;AAChC,gBAAgB,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;AACnD,aAAa,EAAC,CAAC;AACf,SAAS;AACT,KAAK;AACL;AACO;AAAiB;AAA2B;AACvC;AAAS,IADT,aAAa,CAAC,OAAsB;AAAK;AACjC,cAAN,eAAe,GAAG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC;AACtE;AACwC,QAChC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;AACpD;AACqC,QAC7B,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;AACzD,KAAK;AACL;AACO;AAAiB;AACZ;AACZ;AAAS,IAFG,wBAAwB,CAC5B,OAAsB;AAC3B;AACgB,YAGP,WAAW,GAA2B,EAAE;AACpD;AAA0B,cAAZ,aAAa,GAA2B,EAAE;AACxD;AACwB,cAAV,cAAc,sBAAG,OAAO,CAAC,MAAM;AAC7C,aAAa,YAAY,EAA0B;AACnD;AAA0B,cAAZ,cAAc,sBAAG,OAAO,CAAC,MAAM;AAC7C,aAAa,aAAa,EAA0B;AACpD,QACQ,IAAI,CAAC,cAAc,EAAE;AAC7B;AACA,YAAY,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC;AACtD,SAAS;AAAE,aAAI;AACf;AACA,YAAY,cAAc,CAAC,OAAO;AAAO;AACd;AAA4B;AAC3C,YAFuB,QAAQ;AAC3C;AAAkC,sBAAZ,aAAa,GAAG,cAAc,CAAC,IAAI;AACrD;AAAiC;AAAgC;AAClE,gBADiB,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,EACpE;AACjB,gBACgB,IAAI,aAAa,EAAE,CAElB;AAAE,qBAAI;AACvB;AACA,oBAAoB,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC/C,iBAAiB;AACjB,aAAa,EAAC,CAAC;AACf;AACqC,YACzB,cAAc,CAAC,OAAO;AAAO;AACd;AAA4B;AAC3C,YAFuB,QAAQ;AAC3C;AAAkC,sBAAZ,aAAa,GAAG,cAAc,CAAC,IAAI;AACrD;AAAiC;AAAgC;AAClE,gBADiB,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,EACpE;AACjB,gBACgB,IAAI,aAAa,EAAE,CAElB;AAAE,qBAAI;AACvB;AACA,oBAAoB,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACjD,iBAAiB;AACjB,aAAa,EAAC,CAAC;AACf,SAAS;AACT,QACQ,OAAO;AACf,YAAY,WAAW,EAAE,WAAW;AACpC,YAAY,aAAa,EAAE,aAAa;AACxC,SAAS,CAAC;AACV,KAAK;AACL;AACO;AAAiB;AACf;AAAS,IADN,WAAW;AAAM,QACrB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC9D;AAC6C,QACrC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACjC,QACQ,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACxB,YAAY,MAAM,KAAK,CACP,4DACA,IAAI,CAAC,WACL,GAAG,CACN,CAAC;AACd,SAAS;AACT,QACQ,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;AAC5C;AACA,YAAY,YAAY,EAAE,GAAG,GAAG,IAAI,CAAC,yBAAyB;AAC9D,YAAY,WAAW,EAAE,IAAI,CAAC,KAAK;AACnC,YAAY,MAAM,EAAE,IAAI,CAAC,MAAM;AAC/B,SAAS,CAAC,CAAC;AACX;AACwB,cAAV,IAAI,GAAG,IAAI;AACzB,QACQ,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB;AAAQ;AAC/B;AAAwB;AACjC,QAFkC,UAAU,KAAK;AACvD,YAAY,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5C,SAAS,EAAC,CAAC;AACX,QACQ,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB;AAAQ;AAC/B;AAAwB;AACjC,QAFkC,UAAU,KAAK;AACvD,YAAY,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5C,SAAS,EAAC,CAAC;AACX,KAAK;AACL;AACO;AAAiB;AAAyB;AAAoB;AAChE,IADO,sBAAsB,CAAC,KAA2B;AAAK;AAC9C;AACD,cAAN,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI;AAChD;AAAyB;AAAwB;AAAa,QAAtD,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,EACvE;AACT,QACQ,IAAI,CAAC,aAAa,EAAE;AAC5B;AACA,YAAY,OAAO,CAAC,IAAI,CACR,mBACA,KAAK,CAAC,QACN;AAChB;AACA,wEAAwE,CAC3D,CAAC;AACd,YAAY,OAAO;AACnB,SAAS;AACT;AACqC;AACb,cAAV,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,CAAC;AACnE,QACQ,IAAI,CAAC,SAAS,EAAE;AACxB;AACA,YAAY,OAAO,CAAC,IAAI,CACR,mBACA,aAAa,CAAC,EACd,oEAAoE,CACvE,CAAC;AACd,YAAY,OAAO;AACnB,SAAS;AACT;AACoC,QAC5B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACrC;AACyB,QACjB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;AAC5B;AACkC,QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3D;AAA8B,kBAAZ,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;AACpD,YAAY,IACI,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE;AACxD,gBAAgB,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,EAC5C;AACd,gBAAgB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/C,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACO;AAAiB;AAA0B;AAAoB;AAC/D,IADK,kBAAkB,CAAC,MAA8B;AAAK,QAC1D,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACxB,YAAY,MAAM,KAAK,CACP,sEAAsE,CACzE,CAAC;AACd,SAAS;AACT;AACwB,cAAV,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC;AACjE,QACQ,MAAM,CAAC,OAAO;AAAO;AACN;AACjB;AAAa,QAFI,KAAK;AAC5B;AACA;AAA8B,kBAAZ,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE;AAC7C;AAC6B;AACD,kBAAV,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;AAChE,YAAY,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAClD,YAAY,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,gBAAgB,CAAC,CAAC;AACpF,YAAY,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC1D;AACA,YAAY,SAAS,CAAC,YAAY,CAClB,OAAO,EACP,yBAAyB,IAAI,CAAC,KAAK,sBACnC,IAAI,CAAC,cACL,IAAI,CACP,CAAC;AACd,YAAY,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACvD,YAAY,SAAS,CAAC,gBAAgB,CAAC,OAAO;AAAQ;AAC7B;AACzB,YAFgD;AAChD,gBAAgB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACxC,aAAa,EAAC,CAAC;AACf;AACyC,YAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;AACnC,gBAAgB,EAAE,EAAE,OAAO;AAC3B,gBAAgB,KAAK,EAAE,KAAK;AAC5B,aAAa,CAAC,CAAC;AACf;AACsD,YAC1C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;AAChE,SAAS,EAAC,CAAC;AACX;AAC0B,QAClB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;AAC5D;AAC0C;AAClB,cAAV,OAAO,GAAG,kBAAkB,CAAC,aAAa,CAAC;AACzD,QAAQ,OAAO,CAAC,EAAE,CAAC,UAAU;AAAQ;AACvB;AACN;AAAwB;AAAa,QAFd,CAAC,QAAQ,EAAE,KAAK;AAC/C,YAAY,IAAI,KAAK,CAAC,QAAQ,EAAE;AAChC,gBAAgB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;AAChE;AACA,gBAAgB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AACtE,gBAAgB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC/C,gBAAgB,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;AACzC,aAAa;AACb,SAAS,EAAC,CAAC;AACX,KAAK;AACL;AACO;AAAiB;AACnB;AAAS,IADF,aAAa;AAAM;AACb,YAAN,SAAS,GAAG,IAAI,CAAC,yBAAyB;AACtD,QACQ,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/D;AAA8B,kBAAZ,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;AAC3D,YACY,SAAS,IAAI,GAAG,GAAG,WAAW,CAAC;AAC3C,SAAS;AACT,QACQ,OAAO,SAAS,CAAC;AACzB,KAAK;AACL;AACO;AAAiB;AAChB;AAAS,IADL,UAAU;AAAM,QACpB,OAAO,IAAI,CAAC,WAAW,GAAG,GAAG,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;AAC5D,KAAK;AACL;qDAlSC,SAAS,SAAC,mBACP,eAAe,EAAE,uBAAuB,CAAC,MAAM,mBAC/C,QAAQ,EAAE;oBAAqB,mBAC/B,QAAQ,EAAE,gCAAgC,eAC7C;;;;iDACG;AAAE;AAAoB;AACY,YAhBlC,SAAS;AACZ;AAAI;AACwB,qBAexB,KAAK;AAAM,oBACX,KAAK;AAAM,qBACX,KAAK;AAAM,6BACX,KAAK;AAAM,2BACX,KAAK;AAAM,yBAEX,MAAM;AAAM,6BACZ,MAAM;AAAM,6BACZ,MAAM;AAAK;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC;AAAK;AACxB;AAGkD;ACrCnD,MAgBa,oBAAoB;AAAI;kDAXpC,QAAQ,SAAC,mBACN,OAAO,EAAE;EACL,YAAY,mBACf,mBACD,YAAY,EAAE,uBACV;aAAuB,oBAC1B,mBACD,OAAO,EAAE;IACL;EAAuB;OAC1B,gBACJ;;;;;;;;;;;;;;0SACI;AAAC;AAAC;AAAK;AACJ;AAAsH;ACjB9H,MAAa,oBAAoB;AACjC,CAEC;AAAC;AACF;AAAK;AAAmC;AAAsH;AAAI;AAAC;AAAK;AAAmC;AAAsH;AAAI;AAAC;AAAK;AAAmC;AAAsH;AAAI;AAAC;AAAgF","sourcesContent":["export class Utilities {\r\n    newGuid() {\r\n       return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n           // tslint:disable-next-line:no-bitwise triple-equals\r\n           const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n           return v.toString(16);\r\n       });\r\n   }\r\n}\r\n\r\nexport let utilities = new Utilities();\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    Output,\r\n    Renderer2,\r\n    SimpleChanges,\r\n    ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport imagesLoadedMethod from 'imagesloaded';\r\nimport * as masonry from 'masonry-layout';\r\n\r\nimport { IMasonryGalleryImage } from './masonry-gallery-models';\r\nimport { utilities } from './utilities';\r\n\r\n@Component({\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    selector: 'ngx-masonry-gallery',\r\n    template: '<div [id]=\"galleryGuid\"></div>'\r\n})\r\nexport class MasonryGalleryComponent\r\n    implements AfterViewInit, OnDestroy, OnChanges {\r\n    @Input() images: IMasonryGalleryImage[] = [];\r\n    @Input() width: number = 330;\r\n    @Input() gutter: number = 5;\r\n    @Input() verticalGutter: number = 5;\r\n    @Input() imageClasses: string[] = [];\r\n\r\n    @Output() clickImage = new EventEmitter<IMasonryGalleryImage>();\r\n    @Output() removeComplete = new EventEmitter<any[]>();\r\n    @Output() layoutComplete = new EventEmitter<any[]>();\r\n\r\n    public readonly galleryGuid: string = utilities.newGuid();\r\n\r\n    private readonly mansonryItemSelectorClass = `grid-item-${this.galleryGuid}`;\r\n    private readonly activeImages: ActiveImage[] = [];\r\n\r\n    private msnry?: any;\r\n    private grid?: any;\r\n    private changesToProcess?: SimpleChanges;\r\n    private viewReady: boolean = false;\r\n\r\n    constructor(private renderer: Renderer2) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.images && changes.images.currentValue) {\r\n            if (!this.viewReady) {\r\n                // process images once we can\r\n                this.changesToProcess = changes;\r\n            } else {\r\n                this.processImages(changes);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.msnry) {\r\n            this.msnry.destroy();\r\n        }\r\n    }\r\n\r\n    handleClick(image: IMasonryGalleryImage): void {\r\n        this.clickImage.next(image);\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.viewReady = true;\r\n        this.initMasonry();\r\n\r\n        // process images now\r\n        if (this.changesToProcess) {\r\n            this.processImages(this.changesToProcess);\r\n            this.changesToProcess = undefined;\r\n        }\r\n    }\r\n\r\n    addImages(images: IMasonryGalleryImage[]): void {\r\n        if (images && images.length > 0) {\r\n            this.addImagesToGallery(images);\r\n        }\r\n    }\r\n\r\n    removeImages(images: IMasonryGalleryImage[]): void {\r\n        if (images && images.length > 0) {\r\n            images.forEach(image => {\r\n                this.removeImageFromGallery(image);\r\n            });\r\n        }\r\n    }\r\n\r\n    private processImages(changes: SimpleChanges): void {\r\n        const imagesToProcess = this.getAddedAndRemovesImages(changes);\r\n\r\n        // add images to mansonry layout\r\n        this.addImages(imagesToProcess.addedImages);\r\n\r\n        // removes images from layout\r\n        this.removeImages(imagesToProcess.removedImages);\r\n    }\r\n\r\n    private getAddedAndRemovesImages(\r\n        changes: SimpleChanges\r\n    ): {\r\n            addedImages: IMasonryGalleryImage[];\r\n            removedImages: IMasonryGalleryImage[];\r\n        } {\r\n        let addedImages: IMasonryGalleryImage[] = [];\r\n        const removedImages: IMasonryGalleryImage[] = [];\r\n\r\n        const newImagesValue = changes.images\r\n            .currentValue as IMasonryGalleryImage[];\r\n        const oldImagesValue = changes.images\r\n            .previousValue as IMasonryGalleryImage[];\r\n\r\n        if (!oldImagesValue) {\r\n            // all images are new ones\r\n            addedImages = changes.images.currentValue;\r\n        } else {\r\n            // process added images\r\n            newImagesValue.forEach(newImage => {\r\n                const existingImage = oldImagesValue.find(\r\n                    m => m.imageUrl.toLowerCase() === newImage.imageUrl.toLowerCase()\r\n                );\r\n\r\n                if (existingImage) {\r\n                    // image was in previous value && is in new, do nothing\r\n                } else {\r\n                    // image is new\r\n                    addedImages.push(newImage);\r\n                }\r\n            });\r\n\r\n            // process removed images\r\n            oldImagesValue.forEach(oldImage => {\r\n                const existingImage = newImagesValue.find(\r\n                    m => m.imageUrl.toLowerCase() === oldImage.imageUrl.toLowerCase()\r\n                );\r\n\r\n                if (existingImage) {\r\n                    // image was in previous value && is in new, do nothing\r\n                } else {\r\n                    // image is removed\r\n                    removedImages.push(oldImage);\r\n                }\r\n            });\r\n        }\r\n\r\n        return {\r\n            addedImages: addedImages,\r\n            removedImages: removedImages\r\n        };\r\n    }\r\n\r\n    private initMasonry(): void {\r\n        this.grid = document.getElementById(this.galleryGuid);\r\n\r\n        // remove all existing data from grid\r\n        this.grid.innerHTML = '';\r\n\r\n        if (!this.grid) {\r\n            throw Error(\r\n                `Could not init mansory due to non existing elem with id '${\r\n                this.galleryGuid\r\n                }'`\r\n            );\r\n        }\r\n\r\n        this.msnry = new masonry(this.grid, {\r\n            // options...\r\n            itemSelector: '.' + this.mansonryItemSelectorClass,\r\n            columnWidth: this.width,\r\n            gutter: this.gutter,\r\n        });\r\n\r\n        const that = this;\r\n\r\n        this.msnry.on('layoutComplete', function (items) {\r\n            that.layoutComplete.next(items);\r\n        });\r\n\r\n        this.msnry.on('removeComplete', function (items) {\r\n            that.removeComplete.next(items);\r\n        });\r\n    }\r\n\r\n    private removeImageFromGallery(image: IMasonryGalleryImage): void {\r\n        // get image guid\r\n        const imageIdResult = this.activeImages.find(\r\n            m => m.image.imageUrl.toLowerCase() === image.imageUrl.toLowerCase()\r\n        );\r\n\r\n        if (!imageIdResult) {\r\n            // image was not found, this is probably an error\r\n            console.warn(\r\n                `Image with url '${\r\n                image.imageUrl\r\n                }' was not found. If you are adding images, make sure to 'replace' the images array with a new one\r\n                so that detection change can be executed instead of just adding an image to array\r\n                (which doesn't fire change detection on array property)`\r\n            );\r\n            return;\r\n        }\r\n\r\n        // find image based on its id\r\n        const imageElem = document.getElementById(imageIdResult.id);\r\n\r\n        if (!imageElem) {\r\n            // image was not found in DOM\r\n            console.warn(\r\n                `Image with id '{${\r\n                imageIdResult.id\r\n                }}' was not found in DOM. Have you manipulated the DOM in some way?`\r\n            );\r\n            return;\r\n        }\r\n\r\n        // remove image from gallery\r\n        this.msnry.remove(imageElem);\r\n\r\n        // refresh layout\r\n        this.msnry.layout();\r\n\r\n        // remove image from array\r\n        for (let i = 0; i < this.activeImages.length; i++) {\r\n            const idWithImage = this.activeImages[i];\r\n            if (\r\n                idWithImage.image.imageUrl.toLowerCase() ===\r\n                imageIdResult.image.imageUrl.toLowerCase()\r\n            ) {\r\n                this.activeImages.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private addImagesToGallery(images: IMasonryGalleryImage[]): void {\r\n        if (!this.grid) {\r\n            throw Error(\r\n                'Grid element is not yet ready, are you trying to add image too soon?'\r\n            );\r\n        }\r\n\r\n        const imagesWrapper = this.renderer.createElement('span');\r\n\r\n        images.forEach(image => {\r\n            // generate unique image id\r\n            const imageId = this.getImageId();\r\n\r\n            // create element\r\n            const imageElem = this.renderer.createElement('img');\r\n            imageElem.setAttribute('id', imageId);\r\n            imageElem.setAttribute('alt', image.alt ? image.alt : 'no description');\r\n            imageElem.setAttribute('src', image.imageUrl);\r\n            // note - images are hidden by default and should be shown only after they are loaded\r\n            imageElem.setAttribute(\r\n                'style',\r\n                `display: none; width: ${this.width}px; margin-bottom: ${\r\n                this.verticalGutter\r\n                }px`\r\n            );\r\n            imageElem.className = this.getImageClass();\r\n            imageElem.addEventListener('click', () => {\r\n                this.handleClick(image);\r\n            });\r\n\r\n            // store guid with this image\r\n            this.activeImages.push({\r\n                id: imageId,\r\n                image: image\r\n            });\r\n\r\n            // add to dom and mansory & refresh layout\r\n            this.renderer.appendChild(imagesWrapper, imageElem);\r\n        });\r\n\r\n        // add html to dom\r\n        this.renderer.appendChild(this.grid, imagesWrapper);\r\n\r\n        // add images once they are loaded\r\n        const imgLoad = imagesLoadedMethod(imagesWrapper);\r\n        imgLoad.on('progress', (instance, image) => {\r\n            if (image.isLoaded) {\r\n                this.renderer.appendChild(this.grid, image.img);\r\n                // unhide image\r\n                this.renderer.setStyle(image.img, 'display', 'block');\r\n                this.msnry.appended(image.img);\r\n                this.msnry.reloadItems();\r\n            }\r\n        });\r\n    }\r\n\r\n    private getImageClass(): string {\r\n        let className = this.mansonryItemSelectorClass;\r\n\r\n        if (this.imageClasses && this.imageClasses.length > 0) {\r\n            const customClass = this.imageClasses.join(' ');\r\n\r\n            className += ' ' + customClass;\r\n        }\r\n\r\n        return className;\r\n    }\r\n\r\n    private getImageId(): string {\r\n        return this.galleryGuid + '_' + utilities.newGuid();\r\n    }\r\n}\r\n\r\ninterface ActiveImage {\r\n    id: string;\r\n    image: IMasonryGalleryImage;\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { MasonryGalleryComponent } from './masonry-gallery.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        MasonryGalleryComponent,\r\n    ],\r\n    exports: [\r\n        MasonryGalleryComponent,\r\n    ],\r\n})\r\nexport class MasonryGalleryModule { }\r\n","export class IMasonryGalleryImage {\r\n    public imageUrl: string;\r\n    public alt?: string;\r\n}\r\n"]}