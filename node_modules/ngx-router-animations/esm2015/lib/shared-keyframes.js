/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { keyframes, style } from '@angular/animations';
/** @type {?} */
export const moveFromRightKeyframes = keyframes([
    style({ transform: 'translateX(100%)', offset: 0, 'z-index': '9999' }),
    style({ transform: 'translateX(0%)', offset: 1 })
]);
/** @type {?} */
export const moveToLeftKeyframes = keyframes([
    style({ transform: 'translateX(0%)', offset: 0 }),
    style({ transform: 'translateX(-100%)', opacity: '0', offset: 1 })
]);
/** @type {?} */
export const moveFromLeftKeyframes = keyframes([
    style({ transform: 'translateX(-100%)', offset: 0, 'z-index': '9999' }),
    style({ transform: 'translateX(0%)', offset: 1 })
]);
/** @type {?} */
export const moveToRightKeyframes = keyframes([
    style({ transform: 'translateX(0%)', offset: 0 }),
    style({ transform: 'translateX(100%)', opacity: '0', offset: 1 })
]);
/** @type {?} */
export const moveFromTopKeyframes = keyframes([
    style({ transform: 'translateY(-100%)', offset: 0, 'z-index': '9999' }),
    style({ transform: 'translateY(0%)', offset: 1 })
]);
/** @type {?} */
export const moveToBottomKeyframes = keyframes([
    style({ transform: 'translateY(0%)', offset: 0 }),
    style({ transform: 'translateY(100%)', opacity: '0', offset: 1 })
]);
/** @type {?} */
export const moveFromBottomKeyframes = keyframes([
    style({ transform: 'translateY(100%)', offset: 0, 'z-index': '9999' }),
    style({ transform: 'translateY(0%)', offset: 1 })
]);
/** @type {?} */
export const moveToTopKeyframes = keyframes([
    style({ transform: 'translateY(0%)', offset: 0 }),
    style({ transform: 'translateY(-100%)', opacity: '0', offset: 1 })
]);
/** @type {?} */
export const scaleDown = keyframes([
    style({ opacity: '1', transform: 'scale(1)', offset: 0 }),
    style({ opacity: '0', transform: 'scale(0.8)', offset: 1 })
]);
/** @type {?} */
export const fadeFrames = keyframes([
    style({ opacity: '1', offset: 0 }),
    style({ opacity: '0.3', offset: 1 })
]);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmVkLWtleWZyYW1lcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1yb3V0ZXItYW5pbWF0aW9ucy8iLCJzb3VyY2VzIjpbImxpYi9zaGFyZWQta2V5ZnJhbWVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBcUMsTUFBTSxxQkFBcUIsQ0FBQzs7QUFDekYsYUFBYSxzQkFBc0IsR0FDaEMsU0FBUyxDQUFDO0lBQ0UsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRyxDQUFDO0lBQzFFLEtBQUssQ0FBQyxFQUFDLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFDLENBQUM7Q0FDbEQsQ0FBQyxDQUFDOztBQUVULGFBQWEsbUJBQW1CLEdBQ2hDLFNBQVMsQ0FBQztJQUNELEtBQUssQ0FBQyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7SUFDOUMsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLG1CQUFtQixFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO0NBQ3ZFLENBQUMsQ0FBQzs7QUFHTixhQUFhLHFCQUFxQixHQUNwQyxTQUFTLENBQUM7SUFDRSxLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLENBQUM7SUFDMUUsS0FBSyxDQUFDLEVBQUMsU0FBUyxFQUFFLGdCQUFnQixFQUFHLE1BQU0sRUFBRSxDQUFDLEVBQUMsQ0FBQztDQUNuRCxDQUFDLENBQUM7O0FBRVQsYUFBYSxvQkFBb0IsR0FDakMsU0FBUyxDQUFDO0lBQ0QsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQztJQUM5QyxLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7Q0FDdEUsQ0FBQyxDQUFDOztBQUVQLGFBQWEsb0JBQW9CLEdBQ2pDLFNBQVMsQ0FBQztJQUNGLEtBQUssQ0FBQyxFQUFFLFNBQVMsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUcsQ0FBQztJQUM1RSxLQUFLLENBQUMsRUFBQyxTQUFTLEVBQUUsZ0JBQWdCLEVBQUcsTUFBTSxFQUFFLENBQUMsRUFBQyxDQUFDO0NBQ25ELENBQUMsQ0FBQzs7QUFFSCxhQUFhLHFCQUFxQixHQUNsQyxTQUFTLENBQUM7SUFDSCxLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO0lBQzlDLEtBQUssQ0FBQyxFQUFFLFNBQVMsRUFBRSxrQkFBa0IsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQztDQUN0RSxDQUFDLENBQUM7O0FBRVAsYUFBYSx1QkFBdUIsR0FDcEMsU0FBUyxDQUFDO0lBQ0MsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRyxDQUFDO0lBQzFFLEtBQUssQ0FBQyxFQUFDLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRyxNQUFNLEVBQUUsQ0FBQyxFQUFDLENBQUM7Q0FDbkQsQ0FBQyxDQUFDOztBQUVOLGFBQWEsa0JBQWtCLEdBQ3BDLFNBQVMsQ0FBQztJQUNDLEtBQUssQ0FBQyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7SUFDOUMsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLG1CQUFtQixFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO0NBQ3ZFLENBQUMsQ0FBQzs7QUFFUixhQUFhLFNBQVMsR0FDdEIsU0FBUyxDQUFDO0lBQ0gsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUMsQ0FBQztJQUN4RCxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBQyxDQUFDO0NBQzNELENBQUMsQ0FBQzs7QUFFUixhQUFhLFVBQVUsR0FDdEIsU0FBUyxDQUFDO0lBQ0gsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7SUFDL0IsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7Q0FDekMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtrZXlmcmFtZXMsIHN0eWxlLCBBbmltYXRpb25LZXlmcmFtZXNTZXF1ZW5jZU1ldGFkYXRhfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcclxuZXhwb3J0IGNvbnN0IG1vdmVGcm9tUmlnaHRLZXlmcmFtZXM6IEFuaW1hdGlvbktleWZyYW1lc1NlcXVlbmNlTWV0YWRhdGEgPVxyXG4gICBrZXlmcmFtZXMoW1xyXG4gICAgICAgICAgICAgICBzdHlsZSh7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoMTAwJSknLCBvZmZzZXQ6IDAsICd6LWluZGV4JzogJzk5OTknICB9KSxcclxuICAgICAgICAgICAgc3R5bGUoe3RyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoMCUpJywgb2Zmc2V0OiAxfSlcclxuICAgICAgICBdKTtcclxuXHJcbiAgZXhwb3J0IGNvbnN0IG1vdmVUb0xlZnRLZXlmcmFtZXM6IEFuaW1hdGlvbktleWZyYW1lc1NlcXVlbmNlTWV0YWRhdGEgID1cclxuICBrZXlmcmFtZXMoW1xyXG4gICAgICAgICAgIHN0eWxlKHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgwJSknLCBvZmZzZXQ6IDAgfSksXHJcbiAgICAgICAgICAgICAgc3R5bGUoeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC0xMDAlKScsIG9wYWNpdHk6ICcwJywgb2Zmc2V0OiAxIH0pXHJcbiAgICAgICAgXSk7XHJcblxyXG5cclxuICAgICBleHBvcnQgY29uc3QgbW92ZUZyb21MZWZ0S2V5ZnJhbWVzOiBBbmltYXRpb25LZXlmcmFtZXNTZXF1ZW5jZU1ldGFkYXRhICA9XHJcbiAgIGtleWZyYW1lcyhbXHJcbiAgICAgICAgICAgICAgIHN0eWxlKHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgtMTAwJSknLCBvZmZzZXQ6IDAsICd6LWluZGV4JzogJzk5OTknIH0pLFxyXG4gICAgICAgICAgICBzdHlsZSh7dHJhbnNmb3JtOiAndHJhbnNsYXRlWCgwJSknLCAgb2Zmc2V0OiAxfSlcclxuICAgICAgICBdKTtcclxuXHJcbiAgZXhwb3J0IGNvbnN0IG1vdmVUb1JpZ2h0S2V5ZnJhbWVzOiBBbmltYXRpb25LZXlmcmFtZXNTZXF1ZW5jZU1ldGFkYXRhICA9XHJcbiAga2V5ZnJhbWVzKFtcclxuICAgICAgICAgICBzdHlsZSh7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoMCUpJywgb2Zmc2V0OiAwIH0pLFxyXG4gICAgICAgICAgICAgIHN0eWxlKHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgxMDAlKScsIG9wYWNpdHk6ICcwJywgb2Zmc2V0OiAxIH0pXHJcbiAgICAgICAgXSk7XHJcblxyXG4gICAgZXhwb3J0IGNvbnN0IG1vdmVGcm9tVG9wS2V5ZnJhbWVzOiBBbmltYXRpb25LZXlmcmFtZXNTZXF1ZW5jZU1ldGFkYXRhICA9XHJcbiAgICBrZXlmcmFtZXMoW1xyXG4gICAgICAgICAgICBzdHlsZSh7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoLTEwMCUpJywgb2Zmc2V0OiAwLCAnei1pbmRleCc6ICc5OTk5JyAgfSksXHJcbiAgICAgICAgc3R5bGUoe3RyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoMCUpJywgIG9mZnNldDogMX0pXHJcbiAgICBdKTtcclxuXHJcbiAgICBleHBvcnQgY29uc3QgbW92ZVRvQm90dG9tS2V5ZnJhbWVzOiBBbmltYXRpb25LZXlmcmFtZXNTZXF1ZW5jZU1ldGFkYXRhICA9XHJcbiAgICBrZXlmcmFtZXMoW1xyXG4gICAgICAgICAgIHN0eWxlKHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgwJSknLCBvZmZzZXQ6IDAgfSksXHJcbiAgICAgICAgICAgICAgc3R5bGUoeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDEwMCUpJywgb3BhY2l0eTogJzAnLCBvZmZzZXQ6IDEgfSlcclxuICAgICAgICBdKTtcclxuXHJcbiAgICBleHBvcnQgY29uc3QgbW92ZUZyb21Cb3R0b21LZXlmcmFtZXM6IEFuaW1hdGlvbktleWZyYW1lc1NlcXVlbmNlTWV0YWRhdGEgID1cclxuICAgIGtleWZyYW1lcyhbXHJcbiAgICAgICAgICAgICAgIHN0eWxlKHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgxMDAlKScsIG9mZnNldDogMCwgJ3otaW5kZXgnOiAnOTk5OScgIH0pLFxyXG4gICAgICAgICAgICBzdHlsZSh7dHJhbnNmb3JtOiAndHJhbnNsYXRlWSgwJSknLCAgb2Zmc2V0OiAxfSlcclxuICAgICAgICBdKTtcclxuXHJcbiAgICAgZXhwb3J0IGNvbnN0IG1vdmVUb1RvcEtleWZyYW1lczogQW5pbWF0aW9uS2V5ZnJhbWVzU2VxdWVuY2VNZXRhZGF0YSAgPVxyXG5rZXlmcmFtZXMoW1xyXG4gICAgICAgICAgIHN0eWxlKHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgwJSknLCBvZmZzZXQ6IDAgfSksXHJcbiAgICAgICAgICAgICAgc3R5bGUoeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKC0xMDAlKScsIG9wYWNpdHk6ICcwJywgb2Zmc2V0OiAxIH0pXHJcbiAgICAgICAgXSk7XHJcblxyXG4gICBleHBvcnQgY29uc3Qgc2NhbGVEb3duOiBBbmltYXRpb25LZXlmcmFtZXNTZXF1ZW5jZU1ldGFkYXRhICA9XHJcbiAgIGtleWZyYW1lcyhbXHJcbiAgICAgICAgICBzdHlsZSh7IG9wYWNpdHk6ICcxJywgdHJhbnNmb3JtOiAnc2NhbGUoMSknLCBvZmZzZXQ6IDB9KSxcclxuICAgICAgICAgIHN0eWxlKHsgb3BhY2l0eTogJzAnLCB0cmFuc2Zvcm06ICdzY2FsZSgwLjgpJywgb2Zmc2V0OiAxfSlcclxuICAgICAgICBdKTtcclxuXHJcbiAgIGV4cG9ydCBjb25zdCBmYWRlRnJhbWVzOiBBbmltYXRpb25LZXlmcmFtZXNTZXF1ZW5jZU1ldGFkYXRhICA9XHJcbiAgICBrZXlmcmFtZXMoW1xyXG4gICAgICAgICAgIHN0eWxlKHsgb3BhY2l0eTogJzEnLCBvZmZzZXQ6IDAgfSksXHJcbiAgICAgICAgICAgICAgc3R5bGUoeyBvcGFjaXR5OiAnMC4zJywgb2Zmc2V0OiAxIH0pXHJcbiAgICAgICAgXSk7XHJcbiJdfQ==