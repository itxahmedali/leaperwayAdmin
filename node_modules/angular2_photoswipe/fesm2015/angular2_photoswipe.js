import { CommonModule } from '@angular/common';
import * as PhotoSwipe from 'photoswipe';
import * as PhotoSwipeUI_Default from 'photoswipe/dist/photoswipe-ui-default';
import { Injectable, Component, Input, Output, EventEmitter, HostBinding, ContentChildren, ViewChild, ɵɵdefineInjectable, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class Angular2PhotoswipeService {
    constructor() { }
}
Angular2PhotoswipeService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
Angular2PhotoswipeService.ctorParameters = () => [];
/** @nocollapse */ Angular2PhotoswipeService.ngInjectableDef = ɵɵdefineInjectable({ factory: function Angular2PhotoswipeService_Factory() { return new Angular2PhotoswipeService(); }, token: Angular2PhotoswipeService, providedIn: "root" });

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class Angular2PhotoswipeComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
Angular2PhotoswipeComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngp-angular2-photoswipe',
                template: `
    <p>
      angular2-photoswipe works!
    </p>
  `
            }] }
];
/** @nocollapse */
Angular2PhotoswipeComponent.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgpService {
}
NgpService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */ NgpService.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgpService_Factory() { return new NgpService(); }, token: NgpService, providedIn: "root" });

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class LightboxComponent {
    /**
     * @param {?} ngp
     */
    constructor(ngp) {
        this.ngp = ngp;
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.ngp.LightboxElement = this.el;
    }
}
LightboxComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngp-lightbox',
                template: "<!-- Root element of PhotoSwipe. Must have class pswp. -->\n<div class=\"pswp\" #ngpLightbox tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <!-- Background of PhotoSwipe.\n         It's a separate element, as animating opacity is faster than rgba(). -->\n    <div class=\"pswp__bg\"></div>\n    <!-- Slides wrapper with overflow:hidden. -->\n    <div class=\"pswp__scroll-wrap\">\n        <!-- Container that holds slides. PhotoSwipe keeps only 3 slides in DOM to save memory. -->\n        <!-- don't modify these 3 pswp__item elements, data is added later on. -->\n        <div class=\"pswp__container\">\n            <div class=\"pswp__item\"></div>\n            <div class=\"pswp__item\"></div>\n            <div class=\"pswp__item\"></div>\n        </div>\n        <!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->\n        <div class=\"pswp__ui pswp__ui--hidden\">\n            <div class=\"pswp__top-bar\">\n                <!--  Controls are self-explanatory. Order can be changed. -->\n                <div class=\"pswp__counter\"></div>\n                <button class=\"pswp__button pswp__button--close\" title=\"Close (Esc)\"></button>\n                <button class=\"pswp__button pswp__button--share\" title=\"Share\"></button>\n                <button class=\"pswp__button pswp__button--fs\" title=\"Toggle fullscreen\"></button>\n                <button class=\"pswp__button pswp__button--zoom\" title=\"Zoom in/out\"></button>\n                <!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR -->\n                <!-- element will get class pswp__preloader--active when preloader is running -->\n                <div class=\"pswp__preloader\">\n                    <div class=\"pswp__preloader__icn\">\n                        <div class=\"pswp__preloader__cut\">\n                            <div class=\"pswp__preloader__donut\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"pswp__share-modal pswp__share-modal--hidden pswp__single-tap\">\n                <div class=\"pswp__share-tooltip\"></div>\n            </div>\n            <button class=\"pswp__button pswp__button--arrow--left\" title=\"Previous (arrow left)\">\n            </button>\n            <button class=\"pswp__button pswp__button--arrow--right\" title=\"Next (arrow right)\">\n            </button>\n            <div class=\"pswp__caption\">\n                <div class=\"pswp__caption__center\"></div>\n            </div>\n        </div>\n    </div>\n</div>",
                styles: ["/*! PhotoSwipe main CSS by Dmitry Semenov | photoswipe.com | MIT license */.pswp{display:none;position:absolute;width:100%;height:100%;left:0;top:0;overflow:hidden;touch-action:none;z-index:1500;-webkit-text-size-adjust:100%;-webkit-backface-visibility:hidden;outline:0}.pswp *{box-sizing:border-box}.pswp img{max-width:none}.pswp--animate_opacity{opacity:.001;will-change:opacity;transition:opacity 333ms cubic-bezier(.4,0,.22,1)}.pswp--open{display:block}.pswp--zoom-allowed .pswp__img{cursor:-webkit-zoom-in;cursor:-moz-zoom-in;cursor:zoom-in}.pswp--zoomed-in .pswp__img{cursor:-webkit-grab;cursor:-moz-grab;cursor:grab}.pswp--dragging .pswp__img{cursor:-webkit-grabbing;cursor:-moz-grabbing;cursor:grabbing}.pswp__bg{position:absolute;left:0;top:0;width:100%;height:100%;background:#000;opacity:0;-webkit-transform:translateZ(0);transform:translateZ(0);-webkit-backface-visibility:hidden;will-change:opacity}.pswp__scroll-wrap{position:absolute;left:0;top:0;width:100%;height:100%;overflow:hidden}.pswp__container,.pswp__zoom-wrap{touch-action:none;position:absolute;left:0;right:0;top:0;bottom:0;-webkit-backface-visibility:hidden}.pswp__container,.pswp__img{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none}.pswp__zoom-wrap{position:absolute;width:100%;-webkit-transform-origin:left top;transform-origin:left top;transition:transform 333ms cubic-bezier(.4,0,.22,1),-webkit-transform 333ms cubic-bezier(.4,0,.22,1)}.pswp__bg{will-change:opacity;transition:opacity 333ms cubic-bezier(.4,0,.22,1)}.pswp--animated-in .pswp__bg,.pswp--animated-in .pswp__zoom-wrap{transition:none}.pswp__item{position:absolute;left:0;right:0;top:0;bottom:0;overflow:hidden}.pswp__img{position:absolute;width:auto;height:auto;top:0;left:0}.pswp__img--placeholder{-webkit-backface-visibility:hidden}.pswp__img--placeholder--blank{background:#222}.pswp--ie .pswp__img{width:100%!important;height:auto!important;left:0;top:0}.pswp__error-msg{position:absolute;left:0;top:50%;width:100%;text-align:center;font-size:14px;line-height:16px;margin-top:-8px;color:#ccc}.pswp__error-msg a{color:#ccc;text-decoration:underline}/*! PhotoSwipe Default UI CSS by Dmitry Semenov | photoswipe.com | MIT license */.pswp__button{position:relative;cursor:pointer;overflow:visible;-webkit-appearance:none;display:block;border:0;padding:0;margin:0;float:right;opacity:.75;transition:opacity .2s;box-shadow:none}.pswp__button:focus,.pswp__button:hover{opacity:1}.pswp__button:active{outline:0;opacity:.9}.pswp__button::-moz-focus-inner{padding:0;border:0}.pswp__ui--over-close .pswp__button--close{opacity:1}.pswp__button,.pswp__button--arrow--left:before,.pswp__button--arrow--right:before{background:url(/assets/media/default-skin.png) 0 0/264px 88px no-repeat;width:44px;height:44px}@media (-webkit-min-device-pixel-ratio:1.1),(-webkit-min-device-pixel-ratio:1.09375),(min-resolution:105dpi),(min-resolution:1.1dppx){.pswp--svg .pswp__button,.pswp--svg .pswp__button--arrow--left:before,.pswp--svg .pswp__button--arrow--right:before{background-image:url(/assets/media/default-skin.svg)}.pswp--svg .pswp__button--arrow--left,.pswp--svg .pswp__button--arrow--right{background:0 0}}.pswp__button--close{background-position:0 -44px}.pswp__button--share{background-position:-44px -44px}.pswp__button--fs{display:none}.pswp--supports-fs .pswp__button--fs{display:block}.pswp--fs .pswp__button--fs{background-position:-44px 0}.pswp__button--zoom{display:none;background-position:-88px 0}.pswp--zoom-allowed .pswp__button--zoom{display:block}.pswp--zoomed-in .pswp__button--zoom{background-position:-132px 0}.pswp--touch .pswp__button--arrow--left,.pswp--touch .pswp__button--arrow--right{visibility:hidden}.pswp__button--arrow--left,.pswp__button--arrow--right{background:0 0;top:50%;margin-top:-50px;width:70px;height:100px;position:absolute}.pswp__button--arrow--left{left:0}.pswp__button--arrow--right{right:0}.pswp__button--arrow--left:before,.pswp__button--arrow--right:before{content:'';top:35px;background-color:rgba(0,0,0,.3);height:30px;width:32px;position:absolute}.pswp__button--arrow--left:before{left:6px;background-position:-138px -44px}.pswp__button--arrow--right:before{right:6px;background-position:-94px -44px}.pswp__counter,.pswp__share-modal{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.pswp__share-modal{display:block;background:rgba(0,0,0,.5);width:100%;height:100%;top:0;left:0;padding:10px;position:absolute;z-index:1600;opacity:0;transition:opacity .25s ease-out;-webkit-backface-visibility:hidden;will-change:opacity}.pswp__share-modal--hidden{display:none}.pswp__share-tooltip{z-index:1620;position:absolute;background:#fff;top:56px;border-radius:2px;display:block;width:auto;right:44px;box-shadow:0 2px 5px rgba(0,0,0,.25);-webkit-transform:translateY(6px);transform:translateY(6px);transition:transform .25s;transition:transform .25s,-webkit-transform .25s;-webkit-backface-visibility:hidden;will-change:transform}.pswp__share-tooltip a{display:block;padding:8px 12px;color:#000;text-decoration:none;font-size:14px;line-height:18px}.pswp__share-tooltip a:hover{text-decoration:none;color:#000}.pswp__share-tooltip a:first-child{border-radius:2px 2px 0 0}.pswp__share-tooltip a:last-child{border-radius:0 0 2px 2px}.pswp__share-modal--fade-in{opacity:1}.pswp__share-modal--fade-in .pswp__share-tooltip{-webkit-transform:translateY(0);transform:translateY(0)}.pswp--touch .pswp__share-tooltip a{padding:16px 12px}a.pswp__share--facebook:before{content:'';display:block;width:0;height:0;position:absolute;top:-12px;right:15px;border:6px solid transparent;border-bottom-color:#fff;-webkit-pointer-events:none;-moz-pointer-events:none;pointer-events:none}a.pswp__share--facebook:hover{background:#3e5c9a;color:#fff}a.pswp__share--facebook:hover:before{border-bottom-color:#3e5c9a}a.pswp__share--twitter:hover{background:#55acee;color:#fff}a.pswp__share--pinterest:hover{background:#ccc;color:#ce272d}a.pswp__share--download:hover{background:#ddd}.pswp__counter{position:absolute;left:0;top:0;height:44px;font-size:13px;line-height:44px;color:#fff;opacity:.75;padding:0 10px}.pswp__caption{position:absolute;left:0;bottom:0;width:100%;min-height:44px}.pswp__caption small{font-size:11px;color:#bbb}.pswp__caption__center{text-align:left;max-width:420px;margin:0 auto;font-size:13px;padding:10px;line-height:20px;color:#ccc}.pswp__caption--empty{display:none}.pswp__caption--fake{visibility:hidden}.pswp__preloader{width:44px;height:44px;position:absolute;top:0;left:50%;margin-left:-22px;opacity:0;transition:opacity .25s ease-out;will-change:opacity;direction:ltr}.pswp__preloader__icn{width:20px;height:20px;margin:12px}.pswp__preloader--active{opacity:1}.pswp__preloader--active .pswp__preloader__icn{background:url(/assets/media/preloader.gif) no-repeat}.pswp--css_animation .pswp__preloader--active{opacity:1}.pswp--css_animation .pswp__preloader--active .pswp__preloader__icn{-webkit-animation:.5s linear infinite clockwise;animation:.5s linear infinite clockwise}.pswp--css_animation .pswp__preloader--active .pswp__preloader__donut{-webkit-animation:1s cubic-bezier(.4,0,.22,1) infinite donut-rotate;animation:1s cubic-bezier(.4,0,.22,1) infinite donut-rotate}.pswp--css_animation .pswp__preloader__icn{background:0 0;opacity:.75;width:14px;height:14px;position:absolute;left:15px;top:15px;margin:0}.pswp--css_animation .pswp__preloader__cut{position:relative;width:7px;height:14px;overflow:hidden}.pswp--css_animation .pswp__preloader__donut{box-sizing:border-box;width:14px;height:14px;border:2px solid #fff;border-radius:50%;border-left-color:transparent;border-bottom-color:transparent;position:absolute;top:0;left:0;background:0 0;margin:0}@media screen and (max-width:1024px){.pswp__preloader{position:relative;left:auto;top:auto;margin:0;float:right}}@-webkit-keyframes clockwise{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes clockwise{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes donut-rotate{0%,100%{-webkit-transform:rotate(0);transform:rotate(0)}50%{-webkit-transform:rotate(-140deg);transform:rotate(-140deg)}}@keyframes donut-rotate{0%,100%{-webkit-transform:rotate(0);transform:rotate(0)}50%{-webkit-transform:rotate(-140deg);transform:rotate(-140deg)}}.pswp__ui{-webkit-font-smoothing:auto;visibility:visible;opacity:1;z-index:1550}.pswp__top-bar{position:absolute;left:0;top:0;height:44px;width:100%}.pswp--has_mouse .pswp__button--arrow--left,.pswp--has_mouse .pswp__button--arrow--right,.pswp__caption,.pswp__top-bar{-webkit-backface-visibility:hidden;will-change:opacity;transition:opacity 333ms cubic-bezier(.4,0,.22,1)}.pswp--has_mouse .pswp__button--arrow--left,.pswp--has_mouse .pswp__button--arrow--right{visibility:visible}.pswp__caption,.pswp__top-bar{background-color:rgba(0,0,0,.5)}.pswp__ui--fit .pswp__caption,.pswp__ui--fit .pswp__top-bar{background-color:rgba(0,0,0,.3)}.pswp__ui--idle .pswp__button--arrow--left,.pswp__ui--idle .pswp__button--arrow--right,.pswp__ui--idle .pswp__top-bar{opacity:0}.pswp__ui--hidden .pswp__button--arrow--left,.pswp__ui--hidden .pswp__button--arrow--right,.pswp__ui--hidden .pswp__caption,.pswp__ui--hidden .pswp__top-bar{opacity:.001}.pswp__ui--one-slide .pswp__button--arrow--left,.pswp__ui--one-slide .pswp__button--arrow--right,.pswp__ui--one-slide .pswp__counter{display:none}.pswp__element--disabled{display:none!important}.pswp--minimal--dark .pswp__top-bar{background:0 0}"]
            }] }
];
/** @nocollapse */
LightboxComponent.ctorParameters = () => [
    { type: NgpService }
];
LightboxComponent.propDecorators = {
    el: [{ type: ViewChild, args: ['ngpLightbox', { static: true },] }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class Image {
    constructor() { }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @return {?}
 */
function ANGULAR2_PHOTO_SWIPE_FACTORY() {
    return new DefaultLightboxAdapter();
}
/**
 * @abstract
 */
class LightboxAdapter {
}
LightboxAdapter.decorators = [
    { type: Injectable, args: [{ providedIn: 'root', useFactory: ANGULAR2_PHOTO_SWIPE_FACTORY },] }
];
/** @nocollapse */ LightboxAdapter.ngInjectableDef = ɵɵdefineInjectable({ factory: ANGULAR2_PHOTO_SWIPE_FACTORY, token: LightboxAdapter, providedIn: "root" });
class DefaultLightboxAdapter extends LightboxAdapter {
    constructor() {
        super(...arguments);
        this.allowPanToNext = true;
        this.spacing = 0.12;
        this.bgOpacity = 1.0;
        this.mouseUsed = false;
        this.loop = true;
        this.pinchToClose = true;
        this.closeOnScroll = true;
        this.closeOnVerticalDrag = true;
        this.hideAnimationDuration = 333;
        this.showAnimationDuration = 333;
        this.showHideOpacity = false;
        this.escKey = true;
        this.arrowKeys = true;
    }
}
DefaultLightboxAdapter.decorators = [
    { type: Injectable }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class GalleryItemComponent {
    /**
     * @param {?} adapter
     */
    constructor(adapter) {
        this.adapter = adapter;
        this.clicked = new EventEmitter();
        this.isBootstrapEnabled = false;
        this.isBootstrapEnabled = this.adapter.enableBootstrap4;
    }
    /**
     * @return {?}
     */
    onClick() {
        this.clicked.emit(this.image);
        return false;
    }
}
GalleryItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngp-gallery-item',
                template: "<a href=\"{{image.largeUrl}}\" itemprop=\"contentUrl\" [attr.data-size]=\"image.width + 'x' + image.height\"\n    [attr.data-author]=\"image.author\" (click)=\"onClick()\">\n    <img src=\"{{image.thumbUrl}}\" [ngClass]=\"{'card-img-top': isBootstrapEnabled }\"  itemprop=\"thumbnail\" alt=\"{{image.description}}\" />\n</a>",
                styles: [""]
            }] }
];
/** @nocollapse */
GalleryItemComponent.ctorParameters = () => [
    { type: LightboxAdapter }
];
GalleryItemComponent.propDecorators = {
    image: [{ type: Input }],
    clicked: [{ type: Output }],
    isBootstrapEnabled: [{ type: HostBinding, args: ['class.card',] }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class GalleryComponent {
    /**
     * @param {?} ngp
     * @param {?} adapter
     */
    constructor(ngp, adapter) {
        this.ngp = ngp;
        this.adapter = adapter;
        this.shareLinkClick = new EventEmitter();
        this.subscriptions = [];
        this.images = [];
        this.isBootstrapEnabled = this.adapter.enableBootstrap4;
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.images = (/** @type {?} */ (this.galleryItems.toArray().map((/**
         * @param {?} cp
         * @return {?}
         */
        cp => {
            // listen for clicks;
            this.subscriptions.push(cp.clicked.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            (data) => this.onClick(data))));
            return cp.image;
        }))));
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.subscriptions.forEach((/**
         * @param {?} sub
         * @return {?}
         */
        sub => sub.unsubscribe()));
    }
    /**
     * @param {?} data
     * @return {?}
     */
    onClick(data) {
        this.openPhotoSwipe(data, this.galleryElement);
    }
    /**
     * @private
     * @param {?} img
     * @param {?} galleryDOM
     * @return {?}
     */
    openPhotoSwipe(img, galleryDOM) {
        this.adapter.galleryUID = galleryDOM.nativeElement.getAttribute('data-pswp-uid');
        this.adapter.index = img.id;
        /** @type {?} */
        const PSWP = (/** @type {?} */ (this.ngp.LightboxElement.nativeElement));
        this.pswp = new PhotoSwipe(PSWP, PhotoSwipeUI_Default, this.getImagesAsPhotoswipe(), this.adapter);
        /** @type {?} */
        const _this = this;
        this.pswp.listen('shareLinkClick', (/**
         * @param {?} e
         * @param {?} target
         * @return {?}
         */
        function (e, target) {
            _this.shareLinkClick.emit({ e, target });
        }));
        this.pswp.init();
        return false;
    }
    /**
     * @private
     * @return {?}
     */
    getImagesAsPhotoswipe() {
        return this.images.map((/**
         * @param {?} image
         * @return {?}
         */
        image => {
            return {
                src: image.largeUrl,
                w: image.width,
                h: image.height,
                pid: image.id,
                title: image.description,
                author: image.author
            };
        }));
    }
}
GalleryComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngp-gallery',
                template: "<div class=\"angular2_photoswipe\" [ngClass]=\"{'card-columns': isBootstrapEnabled }\"  #ngpGallery id=\"sampleId\" itemscope itemtype=\"http://schema.org/ImageGallery\">\n  <ng-content select=\"ngp-gallery-item\"></ng-content>\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
GalleryComponent.ctorParameters = () => [
    { type: NgpService },
    { type: LightboxAdapter }
];
GalleryComponent.propDecorators = {
    galleryElement: [{ type: ViewChild, args: ['ngpGallery', { static: true },] }],
    galleryItems: [{ type: ContentChildren, args: [GalleryItemComponent,] }],
    galleryId: [{ type: Input }],
    shareLinkClick: [{ type: Output }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class Angular2PhotoswipeModule {
}
Angular2PhotoswipeModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule],
                declarations: [Angular2PhotoswipeComponent, LightboxComponent, GalleryComponent, GalleryItemComponent],
                exports: [LightboxComponent, GalleryComponent, GalleryItemComponent]
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { Angular2PhotoswipeService, Angular2PhotoswipeComponent, LightboxAdapter, Angular2PhotoswipeModule, Image, GalleryItemComponent as ɵf, GalleryComponent as ɵe, ANGULAR2_PHOTO_SWIPE_FACTORY as ɵa, DefaultLightboxAdapter as ɵb, LightboxComponent as ɵc, NgpService as ɵd };

//# sourceMappingURL=angular2_photoswipe.js.map