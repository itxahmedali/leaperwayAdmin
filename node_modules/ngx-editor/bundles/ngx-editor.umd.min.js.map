{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../src/lib/Locals.ts","../src/lib/utils/toStyleString.ts","../src/lib/schema/nodes.ts","../src/lib/schema/marks.ts","../../src/lib/schema.ts","../../src/lib/editor.service.ts","../esm2015/src/lib/services/shared/shared.service.ts","../../src/lib/parsers.ts","../../src/lib/editor.component.ts","../esm2015/src/lib/modules/menu/menu.component.ts","../src/lib/commands/MarkToogle.ts","../src/lib/commands/BlockquoteToggle.ts","../src/lib/commands/ListItemToggle.ts","../src/lib/commands/Heading.ts","../src/lib/commands/TextAlign.ts","../src/lib/commands/Link.ts","../src/lib/commands/Image.ts","../src/lib/commands/TextColor.ts","../src/lib/commands/index.ts","../esm2015/src/lib/modules/menu/MenuCommands.ts","../src/lib/icons/index.ts","../src/lib/icons/bold.ts","../src/lib/icons/italic.ts","../src/lib/icons/code.ts","../src/lib/icons/underline.ts","../src/lib/icons/strike.ts","../src/lib/icons/ordered_list.ts","../src/lib/icons/bullet_list.ts","../src/lib/icons/quote.ts","../src/lib/icons/link.ts","../src/lib/icons/unlink.ts","../src/lib/icons/image.ts","../src/lib/icons/align_left.ts","../src/lib/icons/align_center.ts","../src/lib/icons/align_right.ts","../src/lib/icons/align_justify.ts","../src/lib/icons/text_color.ts","../src/lib/icons/color_fill.ts","../esm2015/lib/src/lib/modules/menu/simple-command/simple-command.component.ts","../esm2015/lib/src/lib/modules/menu/link/link.component.ts","../esm2015/lib/src/lib/modules/menu/dropdown/dropdown.component.ts","../esm2015/lib/src/lib/modules/menu/image/image.component.ts","../esm2015/lib/src/lib/modules/menu/color-picker/color-picker.component.ts","../esm2015/src/lib/pipes/sanitize/sanitize-html.pipe.ts","../esm2015/src/lib/modules/menu/menu.module.ts","../esm2015/src/lib/components/bubble/bubble.component.ts","../../src/lib/editor.module.ts","../../src/lib/validators.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","defaults","bold","italic","code","underline","strike","blockquote","bullet_list","ordered_list","heading","h1","h2","h3","h4","h5","h6","align_left","align_center","align_right","align_justify","text_color","background_color","url","text","openInNewTab","insert","altText","title","remove","Locals","newLocals","_this","this","locals","get","key","_a","assign","camelToDashed","str","replace","toLowerCase","cleanObject","obj","cleanObj","keys","forEach","prop","toStyleString","styles","entries","map","_b","k","v","join","nodes","doc","content","group","paragraph","attrs","align","default","parseDOM","tag","getAttrs","dom","textAlign","style","getAttribute","toDOM","node","defining","horizontal_rule","level","hard_break","inline","selectable","code_block","marks","preserveWhitespace","image","src","alt","width","draggable","list_item","sl.listItem","sl.orderedList","sl.bulletList","makrs","link","href","target","inclusive","em","strong","fontWeight","test","u","s","color","mark","text_background_color","backgroundColor","schema","Schema","DEFAULT_COLOR_PRESETS","DEFAULT_MENU","toolbar","colorPresets","DEFAULT_SCHEMA","DEFAULT_PLUGINS","plugins","nodeViews","menu","Injectable","args","providedIn","NgxEditorService","config","defineProperty","prototype","colors","index","row","Math","floor","NgxEditorServiceConfig","decorators","type","Optional","provideMyServiceOptions","Array","isArray","_c","_d","SharedService","_view","set","customMenuRefChange","Subject","plugin","update","destroy","receiver","privateMap","has","TypeError","__classPrivateFieldGet","__classPrivateFieldSet","setCustomMenuRef","c","toHTML","json","inputSchema","defaultSchema","contentNode","nodeFromJSON","html","DOMSerializer","fromSchema","serializeFragment","div","document","createElement","appendChild","innerHTML","toDoc","el","DOMParser","parse","toJSON","parseValue","docJson","NgxEditorComponent","ngxEditorService","sharedService","editorInitialized","placeholder","editable","init","EventEmitter","focusOut","focusIn","writeValue","outputFormat","updateContent","registerOnChange","fn","onChange","registerOnTouched","onTouched","state","view","tr","newDoc","replaceWith","size","setMeta","eq","docChanged","dispatch","err","console","handleTransactions","applyTransaction","updateState","getMeta","createUpdateWatcherPlugin","Plugin","PluginKey","filterBuiltIns","pluginKey","createEditor","EditorView","ngxEditor","nativeElement","EditorState","filter","placeholderPlugin","editablePlugin","dispatchTransaction","bind","handleDOMEvents","focus","emit","blur","attributes","class","customMenuRef","setPlaceholder","newPlaceholder","updateEditable","edit","ngOnInit","ngOnChanges","changes","isFirstChange","currentValue","ngOnDestroy","Component","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","encapsulation","ViewEncapsulation","None","ViewChild","static","Input","Output","MenuComponent","disabled","simpleCommands","iconContainerClass","dropdownContainerClass","seperatorClass","customMenuRefSubscription","subscribe","ref","isDropDown","item","unsubscribe","MarkToggle","name","execute","toggleMark","isActive","isMarkActive","canExecute","BlockqoteToggle","lift","wrapIn","isNodeActive","ListItemToggle","isBulletList","getType","liftListItem","wrapInList","Heading","selection","nodePos","$from","before","nodeAt","setBlockType","nodesInSelection","getSelectionNodes","supportedNodes","acitveNode","includes","find","Boolean","TextAlign","from","to","applicable","nodesBetween","pos","nodeType","setNodeMarkup","active","defaultOptions","strict","Link","replaceSelectionWith","options","removeLink","Image","nodeAttrs","NodeSelection","createAndFill","TextColor","empty","isAtom","isText","isLeaf","applyMark","getActiveColors","getSelectionMarks","removeStoredMark","removeMark","scrollIntoView","STRONG","EM","CODE","UNDERLINE","STRIKE","BLOCKQUOTE","BlockquoteToggle","UL","OL","H1","H2","H3","H4","H5","H6","ALIGN_LEFT","ALIGN_CENTER","ALIGN_RIGHT","ALIGN_JUSTIFY","LINK","IMAGE","TEXT_COLOR","TEXT_BACKGROUND_COLOR","SimpleCommands","Map","Commands.STRONG","Commands.EM","Commands.CODE","Commands.UNDERLINE","Commands.STRIKE","Commands.BLOCKQUOTE","Commands.UL","Commands.OL","Commands.H1","Commands.H2","Commands.H3","Commands.H4","Commands.H5","Commands.H6","Commands.ALIGN_LEFT","Commands.ALIGN_CENTER","Commands.ALIGN_RIGHT","Commands.ALIGN_JUSTIFY","Commands.LINK","Commands.IMAGE","Commands.TEXT_COLOR","TextBackgroundColor","Commands.TEXT_BACKGROUND_COLOR","icons","unlink","color_fill","Icon","SimpleCommandComponent","ngxeService","command","editorView","pluginUpdateSubscription","toggle","preventDefault","button","getTitle","HostBinding","LinkComponent","showPopup","form","FormGroup","FormControl","Validators","required","pattern","setText","selectedText","textBetween","patchValue","disable","LinkCommand","onDocumentClick","contains","hideForm","getLabel","reset","enable","onMouseDown","insertLink","getRawValue","ElementRef","HostListener","DropdownComponent","isDropdownOpen","activeItems","disabledItems","items","activeItem","getName","toggleDropdown","onClick","selected","ImageComponent","ImageCommand","fillForm","setValue","ColorPickerComponent","activeColors","getContrastYIQ","hexcolor","parseInt","substr","hidePopup","togglePopup","onColorSelect","hasFocus","SanitizeHtmlPipe","sanitizer","transform","bypassSecurityTrustHtml","Pipe","DomSanitizer","NgModule","imports","CommonModule","ReactiveFormsModule","declarations","exports","BubbleComponent","renderer","setDomPosition","showBubble","calculateBubblePos","bottom","left","setStyle","hideBubble","isLinkActive","linkMarks","linkItem","activeLinkItem","Renderer2","NGX_EDITOR_CONFIG_TOKEN","InjectionToken","NgxEditorModule","forRoot","ngModule","useValue","useFactory","deps","hasValidLength","MenuModule","entryComponents","userSchema","control","childCount","firstChild","isTextblock","maxLength","textContent","maxlength","requiredLength","actualLength","minLength","isEmptyInputValue","minlength"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","const defaults = {\n  // menu\n  bold: 'Bold',\n  italic: 'Italic',\n  code: 'Code',\n  underline: 'Underline',\n  strike: 'Strike',\n  blockquote: 'Blockquote',\n  bullet_list: 'Bullet List',\n  ordered_list: 'Ordered List',\n  heading: 'Heading',\n  h1: 'Header 1',\n  h2: 'Header 2',\n  h3: 'Header 3',\n  h4: 'Header 4',\n  h5: 'Header 5',\n  h6: 'Header 6',\n  align_left: 'Left Align',\n  align_center: 'Center Align',\n  align_right: 'Right Align',\n  align_justify: 'Justify',\n  text_color: 'Text Color',\n  background_color: 'Background Color',\n\n  // pupups, forms, others...\n  url: 'URL',\n  text: 'Text',\n  openInNewTab: 'Open in new tab',\n  insert: 'Insert',\n  altText: 'Alt Text',\n  title: 'Title',\n  remove: 'Remove',\n};\n\nexport type LocalsKeys = keyof typeof defaults;\n\nclass Locals {\n  locals = defaults;\n\n  constructor(newLocals: Partial<Record<LocalsKeys, string>> = {}) {\n    this.locals = Object.assign({}, defaults, newLocals);\n  }\n\n  get = (key: string) => {\n    return this.locals[key] ?? '';\n  }\n}\n\nexport default Locals;\n","const camelToDashed = (str: string): string => {\n  return str.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n};\n\nconst cleanObject = (obj: Record<string, any>): Record<string, any> => {\n  const cleanObj = {};\n\n  Object.keys(obj).forEach((prop) => {\n    if (obj[prop]) {\n      cleanObj[prop] = obj[prop];\n    }\n  });\n\n  return cleanObj;\n};\n\nconst toStyleString = (obj: Partial<CSSStyleDeclaration>): string => {\n  const styles = cleanObject(obj);\n  return Object.entries(styles).map(([k, v]) => `${camelToDashed(k)}:${v}`).join(';');\n};\n\nexport default toStyleString;\n","import { DOMOutputSpec, Node as ProsemirrorNode, NodeSpec } from 'prosemirror-model';\nimport * as sl from 'prosemirror-schema-list';\n\nimport toStyleString from '../utils/toStyleString';\n\nconst doc: NodeSpec = {\n  content: 'block+'\n};\n\n// :: NodeSpec The text node.\nconst text: NodeSpec = {\n  group: 'inline'\n};\n\n// :: NodeSpec A plain paragraph textblock. Represented in the DOM\n// as a `<p>` element.\nconst paragraph: NodeSpec = {\n  content: 'inline*',\n  group: 'block',\n  attrs: {\n    align: {\n      default: null,\n    }\n  },\n  parseDOM: [\n    {\n      tag: 'p',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        const { textAlign } = dom.style;\n        const align = dom.getAttribute('align') || textAlign || null;\n\n        return {\n          align\n        };\n      }\n    }\n  ],\n  toDOM(node): DOMOutputSpec {\n    const { align } = node.attrs;\n\n    const styles: Partial<CSSStyleDeclaration> = {\n      textAlign: align !== 'left' ? align : null\n    };\n    const style = toStyleString(styles) || null;\n\n    return ['p', { style }, 0];\n  }\n};\n\n// :: NodeSpec A blockquote (`<blockquote>`) wrapping one or more blocks.\nconst blockquote: NodeSpec = {\n  content: 'block+',\n  group: 'block',\n  defining: true,\n  parseDOM: [{ tag: 'blockquote' }],\n  toDOM(): DOMOutputSpec {\n    return ['blockquote', 0];\n  }\n};\n\n// :: NodeSpec A horizontal rule (`<hr>`).\nconst horizontalRule: NodeSpec = {\n  group: 'block',\n  parseDOM: [{ tag: 'hr' }],\n  toDOM(): DOMOutputSpec {\n    return ['hr'];\n  }\n};\n\n// :: NodeSpec A heading textblock, with a `level` attribute that\n// should hold the number 1 to 6. Parsed and serialized as `<h1>` to\n// `<h6>` elements.\nconst heading: NodeSpec = {\n  attrs: {\n    level: {\n      default: 1\n    },\n    align: {\n      default: null,\n    }\n  },\n  content: 'inline*',\n  group: 'block',\n  defining: true,\n  parseDOM: [\n    {\n      tag: 'h1',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        const { textAlign } = dom.style;\n        const align = dom.getAttribute('align') || textAlign || null;\n\n        return {\n          level: 1,\n          align\n        };\n      }\n    },\n    {\n      tag: 'h2',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        const { textAlign } = dom.style;\n        const align = dom.getAttribute('align') || textAlign || null;\n\n        return {\n          level: 2,\n          align\n        };\n      }\n    },\n    {\n      tag: 'h3',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        const { textAlign } = dom.style;\n        const align = dom.getAttribute('align') || textAlign || null;\n\n        return {\n          level: 3,\n          align\n        };\n      }\n    },\n    {\n      tag: 'h4',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        const { textAlign } = dom.style;\n        const align = dom.getAttribute('align') || textAlign || null;\n\n        return {\n          level: 4,\n          align\n        };\n      }\n    },\n    {\n      tag: 'h5',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        const { textAlign } = dom.style;\n        const align = dom.getAttribute('align') || textAlign || null;\n\n        return {\n          level: 5,\n          align\n        };\n      }\n    },\n    {\n      tag: 'h6',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        const { textAlign } = dom.style;\n        const align = dom.getAttribute('align') || textAlign || null;\n\n        return {\n          level: 6,\n          align\n        };\n      }\n    },\n  ],\n  toDOM(node): DOMOutputSpec {\n    const { level, align } = node.attrs;\n\n    const styles: Partial<CSSStyleDeclaration> = {\n      textAlign: align !== 'left' ? align : null\n    };\n    const style = toStyleString(styles) || null;\n\n    return ['h' + level, { style }, 0];\n  }\n};\n\n// :: NodeSpec A code listing. Disallows marks or non-text inline\n// nodes by default. Represented as a `<pre>` element with a\n// `<code>` element inside of it.\nconst codeBlock: NodeSpec = {\n  content: 'text*',\n  marks: '',\n  group: 'block',\n  code: true,\n  defining: true,\n  parseDOM: [\n    {\n      tag: 'pre',\n      preserveWhitespace: 'full'\n    }\n  ],\n  toDOM(): DOMOutputSpec {\n    return ['pre', ['code', 0]];\n  }\n};\n\n// :: NodeSpec A hard line break, represented in the DOM as `<br>`.\nconst hardBreak: NodeSpec = {\n  inline: true,\n  group: 'inline',\n  selectable: false,\n  parseDOM: [{ tag: 'br' }],\n  toDOM(): DOMOutputSpec {\n    return ['br'];\n  }\n};\n\n// :: NodeSpec An inline image (`<img>`) node. Supports `src`,\n// `alt`, and `href` attributes. The latter two default to the empty\n// string.\nexport const image: NodeSpec = {\n  inline: true,\n  attrs: {\n    src: {},\n    alt: { default: null },\n    title: { default: null },\n    width: { default: null }\n  },\n  group: 'inline',\n  draggable: true,\n  parseDOM: [\n    {\n      tag: 'img[src]',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        return {\n          src: dom.getAttribute('src'),\n          title: dom.getAttribute('title'),\n          alt: dom.getAttribute('alt'),\n          width: dom.getAttribute('width')\n        };\n      }\n    }\n  ],\n  toDOM(node: ProsemirrorNode): DOMOutputSpec {\n    const { src, alt, title, width } = node.attrs;\n    return ['img', { src, alt, title, width }];\n  }\n};\n\nconst listItem = {\n  ...sl.listItem,\n  content: 'paragraph block*'\n};\n\nconst orderedList = {\n  ...sl.orderedList,\n  content: 'list_item+',\n  group: 'block'\n};\n\nconst bulletList = {\n  ...sl.bulletList,\n  content: 'list_item+',\n  group: 'block'\n};\n\nconst nodes = {\n  doc,\n  text,\n  paragraph,\n  blockquote,\n  horizontal_rule: horizontalRule,\n  heading,\n  hard_break: hardBreak,\n  code_block: codeBlock,\n  image,\n  list_item: listItem,\n  ordered_list: orderedList,\n  bullet_list: bulletList\n};\n\nexport default nodes;\n","import { DOMOutputSpec, Mark, MarkSpec } from 'prosemirror-model';\n\n// :: MarkSpec A link. Has `href` and `title` attributes. `title`\n// defaults to the empty string. Rendered and parsed as an `<a>`\n// element.\nconst link: MarkSpec = {\n  attrs: {\n    href: {},\n    title: { default: null },\n    target: { default: '_blank' }\n  },\n  inclusive: false,\n  parseDOM: [\n    {\n      tag: 'a[href]',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        return {\n          href: dom.getAttribute('href'),\n          title: dom.getAttribute('title'),\n          target: dom.getAttribute('target'),\n        };\n      }\n    }],\n  toDOM(node): DOMOutputSpec {\n    const { href, title, target } = node.attrs;\n    return ['a', { href, title, target }, 0];\n  }\n};\n\n// :: MarkSpec An emphasis mark. Rendered as an `<em>` element.\n// Has parse rules that also match `<i>` and `font-style: italic`.\nconst em: MarkSpec = {\n  parseDOM: [\n    { tag: 'i' },\n    { tag: 'em' },\n    { style: 'font-style=italic' }\n  ],\n  toDOM(): DOMOutputSpec {\n    return ['em', 0];\n  }\n};\n\n// :: MarkSpec A strong mark. Rendered as `<strong>`, parse rules\n// also match `<b>` and `font-weight: bold`.\nconst strong: MarkSpec = {\n  parseDOM: [\n    { tag: 'strong' },\n    // This works around a Google Docs misbehavior where\n    // pasted content will be inexplicably wrapped in `<b>`\n    // tags with a font-weight normal.\n    {\n      tag: 'b',\n      getAttrs: (dom: HTMLElement): Record<string, any> => {\n        return dom.style.fontWeight !== 'normal' && null;\n      },\n    },\n    {\n      style: 'font-weight',\n      getAttrs: (value: string): Record<string, any> => {\n        return /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null;\n      }\n    }\n  ],\n  toDOM(): DOMOutputSpec {\n    return ['strong', 0];\n  }\n};\n\n// :: MarkSpec Code font mark. Represented as a `<code>` element.\nconst code: MarkSpec = {\n  parseDOM: [\n    { tag: 'code' }\n  ],\n  toDOM(): DOMOutputSpec {\n    return ['code', 0];\n  }\n};\n\n// :: MarkSpec An underline mark. Rendered as an `<u>` element.\n// Has parse rules that also match `text-decoration: underline`.\nconst u: MarkSpec = {\n  parseDOM: [\n    { tag: 'u' },\n    { style: 'text-decoration=underline' }\n  ],\n  toDOM(): DOMOutputSpec {\n    return ['u', 0];\n  }\n};\n\n// :: MarkSpec An underline mark. Rendered as an `<s>` element.\n// Has parse rules that also match `strike`, `del` tag and css property `text-decoration: line-through`.\nconst s: MarkSpec = {\n  parseDOM: [\n    { tag: 's' },\n    { tag: 'strike' },\n    { style: 'text-decoration=line-through' }\n  ],\n  toDOM(): DOMOutputSpec {\n    return ['s', 0];\n  }\n};\n\nconst textColor: MarkSpec = {\n  attrs: {\n    color: {\n      default: null\n    },\n  },\n  parseDOM: [\n    {\n      style: 'color',\n      getAttrs: (value: string): Record<string, any> => {\n        return { color: value };\n      }\n    }\n  ],\n  toDOM(mark: Mark): DOMOutputSpec {\n    const { color } = mark.attrs;\n    return ['span', { style: `color:${color};` }, 0];\n  },\n};\n\nconst textBackgroundColor: MarkSpec = {\n  attrs: {\n    backgroundColor: {\n      default: null\n    },\n  },\n  parseDOM: [\n    {\n      style: 'background-color',\n      getAttrs: (value: string): Record<string, any> => {\n        return { backgroundColor: value };\n      }\n    }\n  ],\n  toDOM(mark: Mark): DOMOutputSpec {\n    const { backgroundColor } = mark.attrs;\n    return ['span', { style: `background-color:${backgroundColor};` }, 0];\n  },\n};\n\nconst makrs = {\n  link,\n  em,\n  strong,\n  code,\n  u,\n  s,\n  text_color: textColor,\n  text_background_color: textBackgroundColor\n};\n\nexport default makrs;\n","import { Schema } from 'prosemirror-model';\n\nimport nodes from './schema/nodes';\nimport marks from './schema/marks';\n\nexport { default as marks } from './schema/marks';\nexport { default as nodes } from './schema/nodes';\n\nexport const schema = new Schema({\n  marks,\n  nodes\n});\n\nexport default schema;\n","import { Injectable, Optional } from '@angular/core';\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { Menu, NgxEditorConfig, NodeViews, Toolbar } from './types';\nimport Locals from './Locals';\n\nimport { schema } from './schema';\n\nconst DEFAULT_TOOLBAR: Toolbar = [\n  ['bold', 'italic'],\n  ['code', 'blockquote'],\n  ['underline', 'strike'],\n  ['ordered_list', 'bullet_list'],\n  [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }],\n  ['link', 'image'],\n  ['text_color', 'background_color'],\n  ['align_left', 'align_center', 'align_right', 'align_justify'],\n];\n\nconst DEFAULT_COLOR_PRESETS = [\n  '#b60205',\n  '#d93f0b',\n  '#fbca04',\n  '#0e8a16',\n  '#006b75',\n  '#1d76db',\n  '#0052cc',\n  '#5319e7',\n  '#e99695',\n  '#f9d0c4',\n  '#fef2c0',\n  '#c2e0c6',\n  '#bfdadc',\n  '#c5def5',\n  '#bfd4f2',\n  '#d4c5f9'\n];\n\nconst DEFAULT_MENU: Menu = {\n  toolbar: DEFAULT_TOOLBAR,\n  colorPresets: []\n};\n\nconst DEFAULT_SCHEMA = schema;\nconst DEFAULT_PLUGINS: Plugin[] = [\n];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = DEFAULT_PLUGINS;\n  public nodeViews: NodeViews = {};\n  public schema: Schema = DEFAULT_SCHEMA;\n  public menu = DEFAULT_MENU;\n  public locals = {};\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n\n  get locals(): Locals {\n    return new Locals(this.config.locals);\n  }\n\n  get menu(): Menu {\n    return this.config.menu;\n  }\n\n  get colorPresets(): string[][] {\n    const col = 8;\n    const colors: string[][] = [];\n\n    const { colorPresets } = this.config.menu;\n    const allColors = colorPresets.length ? colorPresets : DEFAULT_COLOR_PRESETS;\n\n    allColors.forEach((color, index) => {\n      const row = Math.floor(index / col);\n\n      if (!colors[row]) {\n        colors.push([]);\n      }\n\n      colors[row].push(color);\n    });\n\n    return colors;\n  }\n}\n\nexport const provideMyServiceOptions = (config?: NgxEditorConfig): NgxEditorServiceConfig => {\n  let menu: Menu;\n\n  if (config.menu !== null) {\n    if (!config.menu) {\n      menu = DEFAULT_MENU;\n    } else if (Array.isArray(config.menu)) {\n      menu = {\n        ...DEFAULT_MENU,\n        toolbar: config.menu,\n      };\n    } else {\n      menu = {\n        ...DEFAULT_MENU,\n        ...config.menu,\n      };\n    }\n  }\n\n  return {\n    plugins: config?.plugins ?? DEFAULT_PLUGINS,\n    nodeViews: config?.nodeViews ?? {},\n    menu,\n    schema: config?.schema ?? DEFAULT_SCHEMA,\n    locals: config.locals ?? {}\n  };\n};\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditorView } from 'prosemirror-view';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n  #view: EditorView;\n  customMenuRefChange: Subject<TemplateRef<any>> = new Subject<TemplateRef<any>>();\n\n  plugin = {\n    update: new Subject<EditorView>(),\n    destroy:  new Subject<void>()\n  };\n\n  constructor() { }\n\n  set view(v: EditorView) {\n    this.#view = v;\n  }\n\n  get view(): EditorView {\n    return this.#view;\n  }\n\n  setCustomMenuRef(c: TemplateRef<any>): void {\n    this.customMenuRefChange.next(c);\n  }\n}\n","import { DOMSerializer, Schema, DOMParser, Node as ProsemirrorNode } from 'prosemirror-model';\n\nimport defaultSchema from './schema';\n\n// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\nexport const toHTML = (json: Record<string, any>, inputSchema?: Schema): string => {\n\n  const schema = inputSchema ?? defaultSchema;\n\n  const contentNode = schema.nodeFromJSON(json);\n  const html = DOMSerializer.fromSchema(schema).serializeFragment(contentNode.content);\n\n  const div = document.createElement('div');\n  div.appendChild(html);\n  return div.innerHTML;\n};\n\nexport const toDoc = (html: string, inputSchema?: Schema): Record<string, any> => {\n  const schema = inputSchema ?? defaultSchema;\n\n  const el = document.createElement('div');\n  el.innerHTML = html;\n\n  return DOMParser.fromSchema(schema).parse(el).toJSON();\n};\n\nexport const parseValue = (value: string | Record<string, any> | null, schema: Schema): ProsemirrorNode => {\n  if (!value) {\n    return null;\n  }\n\n  if (typeof value !== 'string') {\n    return schema.nodeFromJSON(value);\n  }\n\n  const docJson = toDoc(value, schema);\n  return schema.nodeFromJSON(docJson);\n};\n","import {\n  Component, ViewChild, ElementRef,\n  forwardRef, OnDestroy, ViewEncapsulation, OnInit,\n  Output, EventEmitter, Input, TemplateRef,\n  OnChanges, SimpleChanges,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { EditorState, Plugin, PluginKey, Transaction } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\n\nimport { NgxEditorService, NgxEditorServiceConfig } from './editor.service';\nimport { SharedService } from './services/shared/shared.service';\nimport { Toolbar } from './types';\nimport { editable as editablePlugin, placeholder as placeholderPlugin } from 'ngx-editor/plugins';\nimport { parseValue, toHTML } from './parsers';\n\n@Component({\n  selector: 'ngx-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxEditorComponent),\n    multi: true\n  }],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class NgxEditorComponent implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\n  @ViewChild('ngxEditor', { static: true }) ngxEditor: ElementRef;\n\n  view: EditorView;\n  private onChange: (value: Record<string, any> | string) => void;\n  private onTouched: () => void;\n\n  private config: NgxEditorServiceConfig;\n  private editorInitialized = false;\n\n  @Input() outputFormat: 'doc' | 'html';\n  @Input() customMenuRef: TemplateRef<any>;\n  @Input() placeholder = 'Type here...';\n  @Input() editable = true;\n  @Output() init = new EventEmitter<EditorView>();\n  @Output() focusOut = new EventEmitter<void>();\n  @Output() focusIn = new EventEmitter<void>();\n\n  constructor(\n    ngxEditorService: NgxEditorService,\n    private sharedService: SharedService,\n  ) {\n    this.config = ngxEditorService.config;\n  }\n\n  get toolbar(): Toolbar {\n    return this.config.menu?.toolbar;\n  }\n\n  writeValue(value: Record<string, any> | string | null): void {\n    if (!this.editorInitialized) {\n      return;\n    }\n\n    if (!this.outputFormat && typeof value === 'string') {\n      this.outputFormat = 'html';\n    }\n\n    this.updateContent(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  private updateContent(value: Record<string, any> | string): void {\n    try {\n      const { state } = this.view;\n      const { tr, doc } = state;\n\n      const newDoc = parseValue(value, this.config.schema);\n      tr.replaceWith(0, state.doc.content.size, newDoc)\n        .setMeta('PREVENT_ONCHANGE', true);\n\n      // don't emit if both content is same\n      if (doc !== null && doc.eq(tr.doc)) {\n        return;\n      }\n\n      if (!tr.docChanged) {\n        return;\n      }\n\n      this.view.dispatch(tr);\n    } catch (err) {\n      console.error('Unable to update document.', err);\n    }\n  }\n\n  private handleTransactions(tr: Transaction): void {\n    const { state } = this.view.state.applyTransaction(tr);\n    this.view.updateState(state);\n\n    if (!tr.docChanged || !this.onChange || tr.getMeta('PREVENT_ONCHANGE')) {\n      return;\n    }\n\n    const json = state.doc.toJSON();\n\n    if (this.outputFormat === 'html') {\n      const html = toHTML(json, this.config.schema);\n      this.onChange(html);\n      return;\n    }\n\n    this.onChange(json);\n  }\n\n  private createUpdateWatcherPlugin(): Plugin {\n    const plugin = new Plugin({\n      key: new PluginKey('ngx-update-watcher'),\n      view: () => {\n        return {\n          update: (view: EditorView) => this.sharedService.plugin.update.next(view),\n          destroy: () => this.sharedService.plugin.destroy.next()\n        };\n      }\n    });\n\n    return plugin;\n  }\n\n  private filterBuiltIns(plugin: Plugin): boolean {\n    const pluginKey: string = (plugin as any).key;\n    if (/^(editable|placeholder)\\$/.test(pluginKey)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private createEditor(): void {\n    const { schema, plugins, nodeViews } = this.config;\n\n    this.view = new EditorView(this.ngxEditor.nativeElement, {\n      state: EditorState.create({\n        doc: null,\n        schema,\n        plugins: [\n          ...plugins.filter((plugin) => this.filterBuiltIns(plugin)),\n          this.createUpdateWatcherPlugin(),\n          placeholderPlugin(this.placeholder),\n          editablePlugin(this.editable)\n        ]\n      }),\n      nodeViews,\n      dispatchTransaction: this.handleTransactions.bind(this),\n      handleDOMEvents: {\n        focus: () => {\n          this.focusIn.emit();\n          return false;\n        },\n        blur: () => {\n          this.onTouched();\n          this.focusOut.emit();\n          return false;\n        }\n      },\n      attributes: {\n        class: 'NgxEditor__Content'\n      },\n    });\n\n    this.editorInitialized = true;\n    this.sharedService.view = this.view;\n    this.sharedService.setCustomMenuRef(this.customMenuRef);\n    this.init.emit(this.view);\n  }\n\n  private setPlaceholder(newPlaceholder?: string): void {\n    const { dispatch, state: { tr } } = this.view;\n    const placeholder = newPlaceholder ?? this.placeholder;\n    dispatch(tr.setMeta('UPDATE_PLACEHOLDER', placeholder));\n  }\n\n  private updateEditable(edit: boolean): void {\n    const { dispatch, state: { tr } } = this.view;\n    dispatch(tr.setMeta('UPDATE_EDITABLE', edit));\n  }\n\n  ngOnInit(): void {\n    this.createEditor();\n    this.setPlaceholder();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.placeholder && !changes.placeholder.isFirstChange()) {\n      this.setPlaceholder(changes.placeholder.currentValue);\n    }\n\n    if (changes?.editable && !changes.editable.isFirstChange()) {\n      this.updateEditable(changes.editable.currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.view.destroy();\n  }\n}\n","import { Component, Input, OnDestroy, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { EditorView } from 'prosemirror-view';\nimport { Subscription } from 'rxjs';\n\nimport { ToolbarItem } from '../../types';\n\nimport { SharedService } from '../../services/shared/shared.service';\n\n@Component({\n  selector: 'ngx-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class MenuComponent implements OnDestroy {\n  @Input() toolbar: any;\n  @Input() editorView: EditorView;\n  @Input() disabled = false;\n\n  customMenuRef: TemplateRef<any> = null;\n  customMenuRefSubscription: Subscription;\n\n  simpleCommands = [\n    'bold', 'italic',\n    'underline', 'strike',\n    'code', 'blockquote',\n    'ordered_list', 'bullet_list',\n    'align_left', 'align_center', 'align_right', 'align_justify'\n  ];\n\n  iconContainerClass = ['NgxEditor__MenuItem', 'NgxEditor__MenuItem--Icon'];\n  dropdownContainerClass = ['NgxEditor__Dropdown'];\n  seperatorClass = ['NgxEditor__Seperator'];\n\n  constructor(private sharedService: SharedService) {\n    this.customMenuRefSubscription = this.sharedService.customMenuRefChange.subscribe((ref) => {\n      this.customMenuRef = ref;\n    });\n  }\n\n  isDropDown(item: ToolbarItem): boolean {\n    if (typeof item === 'object') {\n      return true;\n    }\n\n    return false;\n  }\n\n  ngOnDestroy(): void {\n    this.customMenuRefSubscription.unsubscribe();\n  }\n}\n","import { toggleMark } from 'prosemirror-commands';\nimport { MarkType } from 'prosemirror-model';\n\nimport { EditorState } from 'prosemirror-state';\n\nimport { isMarkActive } from 'ngx-editor/helpers';\n\nimport { SimpleCommand, Dispatch } from './types';\n\nclass MarkToggle implements SimpleCommand {\n  name: string;\n\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  execute(state: EditorState, dispatch: Dispatch): boolean {\n    const { schema } = state;\n\n    const type: MarkType = schema.marks[this.name];\n    if (!type) {\n      return false;\n    }\n\n    return toggleMark(type)(state, dispatch);\n  }\n\n  isActive(state: EditorState): boolean {\n    const { schema } = state;\n\n    const type: MarkType = schema.marks[this.name];\n\n    if (!type) {\n      return false;\n    }\n\n    return isMarkActive(state, type);\n  }\n\n  canExecute(state: EditorState): boolean {\n    return this.execute(state, null);\n  }\n}\n\nexport default MarkToggle;\n","import { NodeType } from 'prosemirror-model';\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { lift, wrapIn } from 'prosemirror-commands';\n\nimport { isNodeActive } from 'ngx-editor/helpers';\n\nimport { SimpleCommand } from './types';\n\nclass BlockqoteToggle implements SimpleCommand {\n  execute(state: EditorState, dispatch?: (tr: Transaction) => void): boolean {\n    const { schema } = state;\n\n    const type: NodeType = schema.nodes.blockquote;\n    if (!type) {\n      return false;\n    }\n\n    if (this.isActive(state)) {\n      return lift(state, dispatch);\n    }\n\n    return wrapIn(type)(state, dispatch);\n  }\n\n  isActive(state: EditorState): boolean {\n    const { schema } = state;\n\n    const type: NodeType = schema.nodes.blockquote;\n    if (!type) {\n      return false;\n    }\n\n    return isNodeActive(state, type);\n  }\n\n  canExecute(state: EditorState): boolean {\n    return this.execute(state, null);\n  }\n}\n\nexport default BlockqoteToggle;\n","import { NodeType, Schema } from 'prosemirror-model';\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { liftListItem, wrapInList } from 'prosemirror-schema-list';\n\nimport { isNodeActive } from 'ngx-editor/helpers';\n\nimport { SimpleCommand } from './types';\n\nclass ListItemToggle implements SimpleCommand {\n  isBulletList = false;\n\n  constructor(isBulletList = false) {\n    this.isBulletList = isBulletList;\n  }\n\n  getType(schema: Schema): NodeType {\n    return this.isBulletList ? schema.nodes.bullet_list : schema.nodes.ordered_list;\n  }\n\n  execute(state: EditorState, dispatch?: (tr: Transaction) => void): boolean {\n    const { schema } = state;\n\n    const type = this.getType(schema);\n    if (!type) {\n      return false;\n    }\n\n    if (this.isActive(state)) {\n      return liftListItem(schema.nodes.list_item)(state, dispatch);\n    }\n\n    return wrapInList(type)(state, dispatch);\n  }\n\n  isActive(state: EditorState): boolean {\n    const { schema } = state;\n\n    const type = this.getType(schema);\n    if (!type) {\n      return false;\n    }\n\n    return isNodeActive(state, type);\n  }\n\n  canExecute(state: EditorState): boolean {\n    return this.execute(state, null);\n  }\n}\n\nexport default ListItemToggle;\n","import { NodeType, Node as ProsemirrorNode } from 'prosemirror-model';\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { setBlockType } from 'prosemirror-commands';\n\nimport { getSelectionNodes } from 'ngx-editor/helpers';\n\ntype Level = 1 | 2 | 3 | 4 | 5 | 6;\n\nclass Heading {\n  level: number;\n\n  constructor(level: Level) {\n    this.level = level;\n  }\n\n  execute(state: EditorState, dispatch?: (tr: Transaction) => void): boolean {\n    const { schema, selection, doc } = state;\n\n    const type: NodeType = schema.nodes.heading;\n    if (!type) {\n      return false;\n    }\n\n    const nodePos = selection.$from.before(1);\n    const node = doc.nodeAt(nodePos);\n\n    const attrs = node?.attrs ?? {};\n\n    if (this.isActive(state)) {\n      return setBlockType(schema.nodes.paragraph, attrs)(state, dispatch);\n    }\n\n    return setBlockType(type, { ...attrs, level: this.level })(state, dispatch);\n  }\n\n  isActive(state: EditorState): boolean {\n    const { schema } = state;\n    const nodesInSelection = getSelectionNodes(state);\n\n    const type: NodeType = schema.nodes.heading;\n    if (!type) {\n      return false;\n    }\n\n    const supportedNodes = [\n      type,\n      schema.nodes.text,\n      schema.nodes.blockquote\n    ];\n\n    // heading is a text node\n    // don't mark as active when it has more nodes\n    const nodes = nodesInSelection.filter(node => {\n      return supportedNodes.includes(node.type);\n    });\n\n    const acitveNode = nodes.find((node: ProsemirrorNode) => {\n      return node.attrs.level === this.level;\n    });\n\n    return Boolean(acitveNode);\n  }\n\n  canExecute(state: EditorState): boolean {\n    return this.execute(state, null);\n  }\n}\n\nexport default Heading;\n","import { EditorState, Transaction } from 'prosemirror-state';\n\nimport { getSelectionNodes } from 'ngx-editor/helpers';\nimport { Node } from 'prosemirror-model';\n\ntype Align = 'left' | 'center' | 'right' | 'justify';\n\nclass TextAlign {\n  align: string;\n\n  constructor(align: Align) {\n    this.align = align;\n  }\n\n  execute(state: EditorState, dispatch?: (tr: Transaction) => void): boolean {\n    const { doc, selection, tr, schema } = state;\n    const { from, to } = selection;\n\n    let applicable = false;\n\n    doc.nodesBetween(from, to, (node, pos) => {\n      const nodeType = node.type;\n      if ([schema.nodes.paragraph, schema.nodes.heading].includes(nodeType)) {\n        applicable = true;\n        tr.setNodeMarkup(pos, nodeType, { ...node.attrs, align: this.align });\n      }\n      return true;\n    });\n\n    if (!applicable) {\n      return false;\n    }\n\n    if (tr.docChanged) {\n      dispatch?.(tr);\n    }\n\n    return true;\n  }\n\n  isActive(state: EditorState): boolean {\n    const nodes = getSelectionNodes(state);\n\n    const active = nodes.find((node: Node) => {\n      return node.attrs.align === this.align;\n    });\n\n    return Boolean(active);\n  }\n\n  canExecute(state: EditorState): boolean {\n    return this.execute(state, null);\n  }\n}\n\nexport default TextAlign;\n","import { toggleMark } from 'prosemirror-commands';\nimport { MarkType } from 'prosemirror-model';\nimport { EditorState } from 'prosemirror-state';\n\nimport { isMarkActive } from 'ngx-editor/helpers';\nimport { removeLink } from 'ngx-editor/commands';\nimport { Dispatch } from './types';\n\nconst defaultOptions = {\n  strict: true\n};\n\nclass Link {\n  update(attrs = {}, state: EditorState, dispatch: Dispatch): boolean {\n    const { schema } = state;\n\n    const type: MarkType = schema.marks.link;\n    if (!type) {\n      return false;\n    }\n\n    return toggleMark(type, attrs)(state, dispatch);\n  }\n\n  insert(text: string, attrs = {}, state: EditorState, dispatch: Dispatch): boolean {\n    const { schema, tr } = state;\n\n    const type: MarkType = schema.marks.link;\n    if (!type) {\n      return false;\n    }\n\n\n    const node = schema.text(text, [schema.marks.link.create(attrs)]);\n    dispatch(tr.replaceSelectionWith(node, false));\n    return true;\n  }\n\n  isActive(state: EditorState, options = defaultOptions): boolean {\n    if (options.strict) {\n      return true;\n    }\n\n    const { schema } = state;\n    return isMarkActive(state, schema.marks.link);\n  }\n\n  remove(state: EditorState, dispatch?: Dispatch): boolean {\n    return removeLink()(state, dispatch);\n  }\n\n  canExecute(state: EditorState): boolean {\n    return this.update({}, state, null);\n  }\n}\n\nexport default Link;\n","import { EditorState, NodeSelection } from 'prosemirror-state';\n\nimport { Dispatch } from './types';\n\nclass Image {\n  execute(attrs = {}, state: EditorState, dispatch: Dispatch): boolean {\n    const { schema, tr, selection } = state;\n\n    const type = schema.nodes.image;\n    if (!type) {\n      return false;\n    }\n\n    const nodeAttrs = { ...attrs, width: null };\n\n    if (selection instanceof NodeSelection && selection.node.type === type) {\n      nodeAttrs.width = selection.node.attrs.width;\n    }\n\n    tr.replaceSelectionWith(type.createAndFill(nodeAttrs));\n\n    if (tr.docChanged) {\n      dispatch?.(tr);\n      return true;\n    }\n\n    return false;\n  }\n\n  isActive(state: EditorState): boolean {\n    const { selection } = state;\n    if (selection instanceof NodeSelection) {\n      return selection.node.type.name === 'image';\n    }\n\n    return false;\n  }\n}\n\nexport default Image;\n","import { MarkType } from 'prosemirror-model';\nimport { EditorState, NodeSelection, TextSelection } from 'prosemirror-state';\n\nimport { getSelectionMarks, isMarkActive } from 'ngx-editor/helpers';\nimport { applyMark } from 'ngx-editor/commands';\n\nimport { Dispatch } from './types';\n\ntype Execute = (state: EditorState, dispatch?: Dispatch) => boolean;\n\ntype Name = 'text_color' | 'text_background_color';\n\nclass TextColor {\n  name: Name;\n\n  constructor(name: Name) {\n    this.name = name;\n  }\n\n  execute(attrs: {}): Execute {\n    return (state: EditorState, dispatch?: Dispatch): boolean => {\n      const { schema, selection, doc } = state;\n\n      const type: MarkType = schema.marks[this.name];\n      if (!type) {\n        return false;\n      }\n\n      const { from, to, empty } = selection;\n\n      if (!empty && (from + 1 === to)) {\n        const node = doc.nodeAt(from);\n        if (node.isAtom && !node.isText && node.isLeaf) {\n          // An atomic node (e.g. Image) is selected.\n          return false;\n        }\n      }\n\n      return applyMark(type, attrs)(state, dispatch);\n    };\n  }\n\n  isActive(state: EditorState): boolean {\n    const { schema } = state;\n    const type: MarkType = schema.marks[this.name];\n\n    if (!type) {\n      return false;\n    }\n\n    return isMarkActive(state, type);\n  }\n\n  getActiveColors(state: EditorState): string[] {\n    if (!this.isActive(state)) {\n      return [];\n    }\n\n    const { schema } = state;\n    const marks = getSelectionMarks(state);\n\n    const colors = marks\n      .filter(mark => mark.type === schema.marks[this.name])\n      .map(mark => mark.attrs.color)\n      .filter(Boolean);\n\n    return colors;\n  }\n\n  remove(state: EditorState, dispatch: Dispatch): boolean {\n    const { tr } = state;\n    const { selection, schema } = state;\n\n    const { empty, from, to } = selection;\n\n    const type = schema.marks[this.name];\n    if (!type) {\n      return false;\n    }\n\n    if (empty) {\n      tr.removeStoredMark(type);\n    } else {\n      tr.removeMark(from, to, type);\n\n      if (!tr.docChanged) {\n        return false;\n      }\n    }\n\n    dispatch(tr.scrollIntoView());\n    return true;\n  }\n\n  canExecute(state: EditorState): boolean {\n    return this.execute({})(state, null);\n  }\n}\n\nexport default TextColor;\n","import MarkToggle from './MarkToogle';\nimport BlockquoteToggle from './BlockquoteToggle';\nimport ListItemToggle from './ListItemToggle';\nimport Heading from './Heading';\nimport TextAlign from './TextAlign';\nimport Link from './Link';\nimport Image from './Image';\nimport TextColor from './TextColor';\n\nexport const STRONG = new MarkToggle('strong');\nexport const EM = new MarkToggle('em');\nexport const CODE = new MarkToggle('code');\nexport const UNDERLINE = new MarkToggle('u');\nexport const STRIKE = new MarkToggle('s');\nexport const BLOCKQUOTE = new BlockquoteToggle();\nexport const UL = new ListItemToggle(true);\nexport const OL = new ListItemToggle(false);\nexport const H1 = new Heading(1);\nexport const H2 = new Heading(2);\nexport const H3 = new Heading(3);\nexport const H4 = new Heading(4);\nexport const H5 = new Heading(5);\nexport const H6 = new Heading(6);\nexport const ALIGN_LEFT = new TextAlign('left');\nexport const ALIGN_CENTER = new TextAlign('center');\nexport const ALIGN_RIGHT = new TextAlign('right');\nexport const ALIGN_JUSTIFY = new TextAlign('justify');\nexport const LINK = new Link();\nexport const IMAGE = new Image();\nexport const TEXT_COLOR = new TextColor('text_color');\nexport const TEXT_BACKGROUND_COLOR = new TextColor('text_background_color');\n","import * as Commands from '../../commands';\n\nimport { SimpleCommand } from '../../commands/types';\n\nexport const SimpleCommands = new Map<string, SimpleCommand>();\n\nSimpleCommands.set('bold', Commands.STRONG);\nSimpleCommands.set('italic', Commands.EM);\nSimpleCommands.set('code', Commands.CODE);\nSimpleCommands.set('underline', Commands.UNDERLINE);\nSimpleCommands.set('strike', Commands.STRIKE);\nSimpleCommands.set('blockquote', Commands.BLOCKQUOTE);\nSimpleCommands.set('bullet_list', Commands.UL);\nSimpleCommands.set('ordered_list', Commands.OL);\nSimpleCommands.set('h1', Commands.H1);\nSimpleCommands.set('h2', Commands.H2);\nSimpleCommands.set('h3', Commands.H3);\nSimpleCommands.set('h4', Commands.H4);\nSimpleCommands.set('h5', Commands.H5);\nSimpleCommands.set('h6', Commands.H6);\nSimpleCommands.set('align_left', Commands.ALIGN_LEFT);\nSimpleCommands.set('align_center', Commands.ALIGN_CENTER);\nSimpleCommands.set('align_right', Commands.ALIGN_RIGHT);\nSimpleCommands.set('align_justify', Commands.ALIGN_JUSTIFY);\n\nexport const Link = Commands.LINK;\nexport const Image = Commands.IMAGE;\nexport const TextColor = Commands.TEXT_COLOR;\nexport const TextBackgroundColor = Commands.TEXT_BACKGROUND_COLOR;\n","// Icons source: https://material.io/\n\nimport bold from './bold';\nimport italic from './italic';\nimport code from './code';\nimport underline from './underline';\nimport strike from './strike';\nimport orderedList from './ordered_list';\nimport bulletList from './bullet_list';\nimport quote from './quote';\nimport link from './link';\nimport unlink from './unlink';\nimport image from './image';\nimport alignLeft from './align_left';\nimport alignCenter from './align_center';\nimport alignRight from './align_right';\nimport alignJustify from './align_justify';\nimport textColor from './text_color';\nimport colorFill from './color_fill';\n\nconst DEFAULT_ICON_HEIGHT = 20;\nconst DEFAULT_ICON_WIDTH = 20;\n\nconst icons = {\n  bold,\n  italic,\n  code,\n  underline,\n  strike,\n  ordered_list: orderedList,\n  bullet_list: bulletList,\n  blockquote: quote,\n  link,\n  unlink,\n  image,\n  align_left: alignLeft,\n  align_center: alignCenter,\n  align_right: alignRight,\n  align_justify: alignJustify,\n  text_color: textColor,\n  color_fill: colorFill\n};\n\nclass Icon {\n  static get(name: string): string {\n    const path = icons[name] || '<path></path>';\n    return `\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"black\"\n        height=${DEFAULT_ICON_HEIGHT}\n        width=${DEFAULT_ICON_WIDTH}\n      >\n        ${path}\n      </svg>\n    `;\n  }\n\n}\n\nexport default Icon;\n","/* tslint:disable */\n\nexport default `\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n`;\n","export default `\n  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\" />\n`;\n","export default `\n<path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n<path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"/>\n`;\n","export default `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n<path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n`;\n","export default `\n<path d=\"M6.85,7.08C6.85,4.37,9.45,3,12.24,3c1.64,0,3,0.49,3.9,1.28c0.77,0.65,1.46,1.73,1.46,3.24h-3.01 c0-0.31-0.05-0.59-0.15-0.85c-0.29-0.86-1.2-1.28-2.25-1.28c-1.86,0-2.34,1.02-2.34,1.7c0,0.48,0.25,0.88,0.74,1.21 C10.97,8.55,11.36,8.78,12,9H7.39C7.18,8.66,6.85,8.11,6.85,7.08z M21,12v-2H3v2h9.62c1.15,0.45,1.96,0.75,1.96,1.97 c0,1-0.81,1.67-2.28,1.67c-1.54,0-2.93-0.54-2.93-2.51H6.4c0,0.55,0.08,1.13,0.24,1.58c0.81,2.29,3.29,3.3,5.67,3.3 c2.27,0,5.3-0.89,5.3-4.05c0-0.3-0.01-1.16-0.48-1.94H21V12z\"/>\n`;\n","export default `\n<path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"/>\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n`;\n","export default `\n<path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n<path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\"/>\n`;\n","export default `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z\"/>\n`;\n","export default `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n`;\n","export default `\n<path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n<path d=\"M17 7h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1 0 1.43-.98 2.63-2.31 2.98l1.46 1.46C20.88 15.61 22 13.95 22 12c0-2.76-2.24-5-5-5zm-1 4h-2.19l2 2H16zM2 4.27l3.11 3.11C3.29 8.12 2 9.91 2 12c0 2.76 2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1 0-1.59 1.21-2.9 2.76-3.07L8.73 11H8v2h2.73L13 15.27V17h1.73l4.01 4L20 19.74 3.27 3 2 4.27z\"/>\n<path d=\"M0 24V0\" fill=\"none\"/>\n`;\n","export default `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n<path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"/>\n`;\n","export default `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n<path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n`;\n","export default `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n<path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n`;\n","export default `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n<path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n`;\n","export default `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n<path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"/>\n`;\n","export default `\n<path d=\"M2,20h20v4H2V20z M5.49,17h2.42l1.27-3.58h5.65L16.09,17h2.42L13.25,3h-2.5L5.49,17z M9.91,11.39l2.03-5.79h0.12l2.03,5.79 H9.91z\"/>\n`;\n","export default `\n<path d=\"M16.56,8.94L7.62,0L6.21,1.41l2.38,2.38L3.44,8.94c-0.59,0.59-0.59,1.54,0,2.12l5.5,5.5C9.23,16.85,9.62,17,10,17 s0.77-0.15,1.06-0.44l5.5-5.5C17.15,10.48,17.15,9.53,16.56,8.94z M5.21,10L10,5.21L14.79,10H5.21z M19,11.5c0,0-2,2.17-2,3.5 c0,1.1,0.9,2,2,2s2-0.9,2-2C21,13.67,19,11.5,19,11.5z M2,20h20v4H2V20z\"/>\n`;\n","import { Component, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\nimport { EditorView } from 'prosemirror-view';\nimport { Subscription } from 'rxjs';\n\nimport { SimpleCommands } from '../MenuCommands';\nimport Icon from '../../../icons';\nimport { NgxEditorService } from '../../../editor.service';\nimport { SharedService } from '../../../services/shared/shared.service';\n\n@Component({\n  selector: 'ngx-simple-command',\n  templateUrl: './simple-command.component.html',\n  styleUrls: ['./simple-command.component.scss']\n})\n\nexport class SimpleCommandComponent implements OnInit, OnDestroy {\n  @Input() name: string;\n\n  html: string;\n  editorView: EditorView;\n  private pluginUpdateSubscription: Subscription;\n\n  constructor(\n    private ngxeService: NgxEditorService,\n    private sharedService: SharedService\n  ) {\n    this.editorView = this.sharedService.view;\n\n    this.pluginUpdateSubscription = this.sharedService.plugin.update.subscribe((view: EditorView) => {\n      this.update(view);\n    });\n  }\n\n  @HostBinding('class.NgxEditor__MenuItem--Active') isActive = false;\n  @HostBinding('class.NgxEditor--Disabled') disabled = false;\n\n  toggle(e: MouseEvent): void {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const { state, dispatch } = this.editorView;\n    const command = SimpleCommands.get(this.name);\n    command.execute(state, dispatch);\n  }\n\n  update = (view: EditorView) => {\n    const { state } = view;\n    const command = SimpleCommands.get(this.name);\n    this.isActive = command.isActive(state);\n    this.disabled = !command.canExecute(state);\n  }\n\n  getTitle(name: string): string {\n    return this.ngxeService.locals.get(name);\n  }\n\n  ngOnInit(): void {\n    this.html = Icon.get(this.name);\n  }\n\n  ngOnDestroy(): void {\n    this.pluginUpdateSubscription.unsubscribe();\n  }\n}\n","import { Component, ElementRef, HostBinding, HostListener, Input, OnDestroy } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EditorView } from 'prosemirror-view';\nimport { Subscription } from 'rxjs';\n\nimport { NgxEditorService } from '../../../editor.service';\nimport { SharedService } from '../../../services/shared/shared.service';\nimport Icon from '../../../icons';\nimport { Link as LinkCommand } from '../MenuCommands';\n\n@Component({\n  selector: 'ngx-link',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.scss']\n})\n\nexport class LinkComponent implements OnDestroy {\n  showPopup = false;\n  isActive = false;\n  private canExecute = true;\n  private editorView: EditorView;\n  private pluginUpdateSubscription: Subscription;\n\n  @Input() name: string;\n\n  form = new FormGroup({\n    href: new FormControl('', [\n      Validators.required,\n      Validators.pattern('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?')\n    ]),\n    text: new FormControl('', [Validators.required]),\n    openInNewTab: new FormControl(true)\n  });\n\n  constructor(\n    private el: ElementRef,\n    private ngxeService: NgxEditorService,\n    private sharedService: SharedService\n  ) {\n    this.editorView = this.sharedService.view;\n\n    this.pluginUpdateSubscription = this.sharedService.plugin.update.subscribe((view: EditorView) => {\n      this.update(view);\n    });\n  }\n\n  @HostBinding('class.NgxEditor__MenuItem--Active') get valid(): boolean {\n    return this.isActive || this.showPopup;\n  }\n\n  @HostBinding('class.NgxEditor--Disabled') get disabled(): boolean {\n    return !this.canExecute;\n  }\n\n  get icon(): string {\n    return Icon.get(this.isActive ? 'unlink' : 'link');\n  }\n\n  get href(): AbstractControl {\n    return this.form.get('href');\n  }\n\n  get text(): AbstractControl {\n    return this.form.get('text');\n  }\n\n  @HostListener('document:mousedown', ['$event']) onDocumentClick(e: MouseEvent): void {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hideForm();\n    }\n  }\n\n  getLabel(key: string): string {\n    return this.ngxeService.locals.get(key);\n  }\n\n  private hideForm(): void {\n    this.showPopup = false;\n    this.form.reset({\n      href: '',\n      text: '',\n      openInNewTab: true\n    });\n    this.text.enable();\n  }\n\n  onMouseDown(e: MouseEvent): void {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const { state, dispatch } = this.editorView;\n\n    if (this.isActive) {\n      LinkCommand.remove(state, dispatch);\n      return;\n    }\n\n    this.showPopup = !this.showPopup;\n    if (this.showPopup) {\n      this.setText();\n    }\n  }\n\n  private setText = () => {\n    const { state: { selection, doc } } = this.editorView;\n    const { empty, from, to } = selection;\n    const selectedText = !empty ? doc.textBetween(from, to) : '';\n\n    if (selectedText) {\n      this.text.patchValue(selectedText);\n      this.text.disable();\n    }\n  }\n\n  private update = (view: EditorView) => {\n    const { state } = view;\n    this.isActive = LinkCommand.isActive(state, { strict: false });\n    this.canExecute = LinkCommand.canExecute(state);\n  }\n\n  insertLink(e: MouseEvent): void {\n    e.preventDefault();\n    const { text, href, openInNewTab } = this.form.getRawValue();\n    const { dispatch, state } = this.editorView;\n    const { selection } = state;\n\n    const attrs = {\n      title: href,\n      href,\n      target: openInNewTab ? '_blank' : '_self'\n    };\n\n    if (selection.empty) {\n      LinkCommand.insert(text, attrs, state, dispatch);\n    } else {\n      LinkCommand.update(attrs, state, dispatch);\n    }\n    this.hideForm();\n  }\n\n  ngOnDestroy(): void {\n    this.pluginUpdateSubscription.unsubscribe();\n  }\n}\n","import { Component, ElementRef, HostBinding, HostListener, Input, OnDestroy, OnInit } from '@angular/core';\nimport { EditorView } from 'prosemirror-view';\nimport { Subscription } from 'rxjs';\n\nimport { NgxEditorService } from '../../../editor.service';\nimport { SharedService } from '../../../services/shared/shared.service';\nimport { SimpleCommands } from '../MenuCommands';\n\n@Component({\n  selector: 'ngx-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent implements OnInit, OnDestroy {\n  private editorView: EditorView;\n  private pluginUpdateSubscription: Subscription;\n\n  @Input() group: any;\n  @Input() items: any;\n\n  isDropdownOpen = false;\n  selected: string;\n\n  private activeItems = [];\n  disabledItems = [];\n  activeItem: string | null;\n\n  constructor(\n    private ngxeService: NgxEditorService,\n    private sharedService: SharedService,\n    private el: ElementRef\n  ) {\n    this.editorView = this.sharedService.view;\n\n    this.pluginUpdateSubscription = this.sharedService.plugin.update.subscribe((view: EditorView) => {\n      this.update(view);\n    });\n  }\n\n  @HostBinding('class.NgxEditor__Dropdown--Selected') get isSelected(): boolean {\n    return Boolean(this.activeItem || this.isDropdownOpen);\n  }\n\n  @HostBinding('class.NgxEditor--Disabled') get isDropdownDisabled(): boolean {\n    return this.disabledItems.length === this.items.length;\n  }\n\n  @HostListener('document:mousedown', ['$event.target']) onDocumentClick(target: Node): void {\n    if (!this.el.nativeElement.contains(target) && this.isDropdownOpen) {\n      this.isDropdownOpen = false;\n    }\n  }\n\n  getName(key: string): string {\n    return this.ngxeService.locals.get(key);\n  }\n\n  toggleDropdown(e: MouseEvent): void {\n    e.preventDefault();\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n\n  onClick(e: MouseEvent, item: string): void {\n    e.preventDefault();\n\n    // consider only left click\n    if (e.button !== 0) {\n      return;\n    }\n\n    const command = SimpleCommands.get(item);\n    const { state, dispatch } = this.editorView;\n    command.execute(state, dispatch);\n    this.isDropdownOpen = false;\n  }\n\n  private update = (view: EditorView) => {\n    const { state } = view;\n    this.activeItems = [];\n    this.disabledItems = [];\n\n    this.items.forEach((item: string) => {\n      const command = SimpleCommands.get(item);\n      const isActive = command.isActive(state);\n\n      if (isActive) {\n        this.activeItems.push(item);\n      }\n\n      if (!command.canExecute(state)) {\n        this.disabledItems.push(item);\n      }\n    });\n\n    if (this.activeItems.length === 1) {\n      this.activeItem = this.activeItems[0];\n    } else {\n      this.activeItem = null;\n    }\n  }\n\n  ngOnInit(): void {\n    this.selected = this.group;\n  }\n\n  ngOnDestroy(): void {\n    this.pluginUpdateSubscription.unsubscribe();\n  }\n}\n","import { Component, ElementRef, HostBinding, HostListener, Input, OnDestroy } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NodeSelection } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Subscription } from 'rxjs';\n\nimport { NgxEditorService } from '../../../editor.service';\nimport { SharedService } from '../../../services/shared/shared.service';\nimport Icon from '../../../icons';\nimport { Image as ImageCommand } from '../MenuCommands';\n\n@Component({\n  selector: 'ngx-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent implements OnDestroy {\n  showPopup = false;\n  isActive = false;\n  private pluginUpdateSubscription: Subscription;\n\n  form = new FormGroup({\n    src: new FormControl('', [\n      Validators.required,\n      Validators.pattern('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?')\n    ]),\n    alt: new FormControl(''),\n    title: new FormControl('')\n  });\n\n  private editorView: EditorView;\n  @Input() name: string;\n\n  constructor(\n    private el: ElementRef,\n    private ngxeService: NgxEditorService,\n    private sharedService: SharedService\n  ) {\n    this.editorView = this.sharedService.view;\n\n    this.pluginUpdateSubscription = this.sharedService.plugin.update.subscribe((view: EditorView) => {\n      this.update(view);\n    });\n  }\n\n  @HostBinding('class.NgxEditor__MenuItem--Active') get valid(): boolean {\n    return this.isActive || this.showPopup;\n  }\n\n  get icon(): string {\n    return Icon.get('image');\n  }\n\n  get src(): AbstractControl {\n    return this.form.get('src');\n  }\n\n  @HostListener('document:mousedown', ['$event']) onDocumentClick(e: MouseEvent): void {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hideForm();\n    }\n  }\n\n  getLabel(key: string): string {\n    return this.ngxeService.locals.get(key);\n  }\n\n  private hideForm(): void {\n    this.showPopup = false;\n    this.form.reset({\n      src: '',\n      alt: '',\n      title: ''\n    });\n  }\n\n  onMouseDown(e: MouseEvent): void {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    this.showPopup = !this.showPopup;\n\n    if (this.showPopup) {\n      this.fillForm();\n    }\n  }\n\n  private fillForm(): void {\n    const { state } = this.editorView;\n    const { selection } = state;\n    if (selection instanceof NodeSelection && this.isActive) {\n      const { src, alt = '', title = '' } = selection.node.attrs;\n\n      this.form.setValue({\n        src,\n        alt,\n        title\n      });\n    }\n  }\n\n  private update = (view: EditorView) => {\n    const { state } = view;\n    this.isActive = ImageCommand.isActive(state);\n  }\n\n  insertLink(e: MouseEvent): void {\n    e.preventDefault();\n    const { src, alt, title } = this.form.getRawValue();\n    const { dispatch, state } = this.editorView;\n\n    const attrs = {\n      src,\n      alt,\n      title\n    };\n\n    ImageCommand.execute(attrs, state, dispatch);\n    this.hideForm();\n  }\n\n  ngOnDestroy(): void {\n    this.pluginUpdateSubscription.unsubscribe();\n  }\n}\n","import {\n  Component, ElementRef, HostBinding,\n  HostListener, OnDestroy, Input\n} from '@angular/core';\nimport { EditorView } from 'prosemirror-view';\nimport { Subscription } from 'rxjs';\n\nimport Icon from '../../../icons';\nimport { NgxEditorService } from '../../../editor.service';\nimport { SharedService } from '../../../services/shared/shared.service';\nimport { TextColor, TextBackgroundColor } from '../MenuCommands';\n\ntype Command = typeof TextColor | typeof TextBackgroundColor;\n\n@Component({\n  selector: 'ngx-color-picker',\n  templateUrl: './color-picker.component.html',\n  styleUrls: ['./color-picker.component.scss']\n})\nexport class ColorPickerComponent implements OnDestroy {\n\n  constructor(\n    private el: ElementRef,\n    private sharedService: SharedService,\n    private ngxeService: NgxEditorService\n  ) {\n    this.editorView = this.sharedService.view;\n\n    this.pluginUpdateSubscription = this.sharedService.plugin.update.subscribe((view: EditorView) => {\n      this.update(view);\n    });\n  }\n\n  @HostBinding('class.NgxEditor__MenuItem--Active') get valid(): boolean {\n    return this.isActive || this.showPopup;\n  }\n\n  @HostBinding('class.NgxEditor--Disabled') get disabled(): boolean {\n    return !this.canExecute;\n  }\n\n  get presets(): string[][] {\n    return this.ngxeService.colorPresets;\n  }\n\n  get title(): string {\n    return this.getLabel(this.type === 'text_color' ? 'text_color' : 'background_color');\n  }\n\n  get icon(): string {\n    return Icon.get(this.type === 'text_color' ? 'text_color' : 'color_fill');\n  }\n\n  private get command(): Command {\n    return this.type === 'text_color' ? TextColor : TextBackgroundColor;\n  }\n\n  private pluginUpdateSubscription: Subscription;\n  private editorView: EditorView;\n  showPopup = false;\n  isActive = false;\n  activeColors = [];\n  private canExecute = true;\n\n  @Input() type: string;\n\n  getContrastYIQ(hexcolor: string): string {\n    hexcolor = hexcolor.replace('#', '');\n    const r = parseInt(hexcolor.substr(0, 2), 16);\n    const g = parseInt(hexcolor.substr(2, 2), 16);\n    const b = parseInt(hexcolor.substr(4, 2), 16);\n    const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    return (yiq >= 128) ? 'black' : 'white';\n  }\n\n  @HostListener('document:mousedown', ['$event']) onDocumentClick(e: MouseEvent): void {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hidePopup();\n    }\n  }\n\n  private hidePopup(): void {\n    this.showPopup = false;\n  }\n\n  togglePopup(e: MouseEvent): void {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    this.showPopup = !this.showPopup;\n  }\n\n  remove(e: MouseEvent): void {\n    e.preventDefault();\n    const { state, dispatch } = this.editorView;\n\n    this.command.remove(state, dispatch);\n    this.hidePopup();\n  }\n\n  onColorSelect(e: MouseEvent, color: string): void {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const { state, dispatch } = this.editorView;\n\n    const attrs: Record<string, any> = {};\n\n    if (this.type === 'text_color') {\n      attrs.color = color;\n    } else {\n      attrs.backgroundColor = color;\n    }\n\n    this.command.execute(attrs)(state, dispatch);\n\n    if (!this.editorView.hasFocus()) {\n      this.editorView.focus();\n    }\n\n    this.hidePopup();\n  }\n\n  private update = (view: EditorView) => {\n    const { state } = view;\n    this.canExecute = this.command.execute(null)(state);\n    this.isActive = this.command.isActive(state);\n    this.activeColors = [];\n\n    if (this.isActive) {\n      this.activeColors = this.command.getActiveColors(state);\n    }\n  }\n\n  getLabel(key: string): string {\n    return this.ngxeService.locals.get(key);\n  }\n\n  ngOnDestroy(): void {\n    this.pluginUpdateSubscription.unsubscribe();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'sanitizeHtml'\n})\n\nexport class SanitizeHtmlPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) { }\n\n  transform(value: string): SafeHtml {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MenuComponent } from './menu.component';\nimport { SimpleCommandComponent } from './simple-command/simple-command.component';\nimport { LinkComponent } from './link/link.component';\nimport { DropdownComponent } from './dropdown/dropdown.component';\nimport { ImageComponent } from './image/image.component';\nimport { ColorPickerComponent } from './color-picker/color-picker.component';\n\nimport { SanitizeHtmlPipe } from '../../pipes/sanitize/sanitize-html.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    // pipes\n    SanitizeHtmlPipe,\n\n    // components\n    MenuComponent,\n    SimpleCommandComponent,\n    LinkComponent,\n    DropdownComponent,\n    ImageComponent,\n    ColorPickerComponent\n  ],\n  exports: [MenuComponent],\n})\n\nexport class MenuModule { }\n","import {\n  Component, ElementRef, OnDestroy,\n  OnInit, Renderer2\n} from '@angular/core';\nimport { NodeSelection } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Mark } from 'prosemirror-model';\nimport { Subscription } from 'rxjs';\n\nimport { calculateBubblePos, getSelectionMarks, isLinkActive } from 'ngx-editor/helpers';\nimport { removeLink } from 'ngx-editor/commands';\n\nimport { SharedService } from '../../services/shared/shared.service';\n\n@Component({\n  selector: 'ngx-bubble',\n  templateUrl: './bubble.component.html',\n  styleUrls: ['./bubble.component.scss']\n})\nexport class BubbleComponent implements OnInit, OnDestroy {\n  private view: EditorView;\n  activeLinkItem: Mark;\n  private pluginUpdateSubscription: Subscription;\n\n  constructor(\n    private sharedService: SharedService,\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) {\n    this.pluginUpdateSubscription = this.sharedService.plugin.update.subscribe((view: EditorView) => {\n      this.view = view;\n      this.update(view);\n    });\n  }\n\n  private setDomPosition(view: EditorView): void {\n    // Otherwise, reposition it and update its content\n    this.showBubble();\n\n    const { bottom, left } = calculateBubblePos(view, this.el.nativeElement);\n\n    this.renderer.setStyle(this.el.nativeElement, 'left', `${left}px`);\n    this.renderer.setStyle(this.el.nativeElement, 'bottom', `${bottom}px`);\n  }\n\n  private showBubble(): void {\n    this.renderer.setStyle(this.el.nativeElement, 'display', '');\n  }\n\n  private hideBubble(): void {\n    this.renderer.setStyle(this.el.nativeElement, 'display', 'none');\n  }\n\n  removeLink(): void {\n    const { state, dispatch } = this.view;\n    removeLink()(state, dispatch);\n    this.view.focus();\n  }\n\n  private update(view: EditorView): void {\n    const { state } = view;\n    const { schema, selection } = state;\n\n    if (!schema.marks.link) {\n      return;\n    }\n\n    if (selection instanceof NodeSelection) {\n      if (selection.node.type.name === 'image') {\n        return;\n      }\n    }\n\n    const hasFocus = view.hasFocus();\n    const isActive = isLinkActive(state);\n    const linkMarks: Mark[] = getSelectionMarks(state).filter(mark => mark.type === schema.marks.link);\n\n    // hide for selection and show only for clicks\n    if (!hasFocus || !isActive) {\n      this.hideBubble();\n      return;\n    }\n\n    const [linkItem] = linkMarks;\n    this.activeLinkItem = linkItem;\n\n    // update dom position\n    this.setDomPosition(view);\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnDestroy(): void {\n    this.pluginUpdateSubscription.unsubscribe();\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxEditorConfig } from './types';\n\nimport { NgxEditorComponent } from './editor.component';\nimport { NgxEditorServiceConfig, provideMyServiceOptions } from './editor.service';\nimport { MenuModule } from './modules/menu/menu.module';\n\nimport { BubbleComponent } from './components/bubble/bubble.component';\nimport { SharedService } from './services/shared/shared.service';\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken<NgxEditorConfig>('NgxEditorConfig');\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MenuModule,\n  ],\n  providers: [\n    SharedService\n  ],\n  declarations: [\n    NgxEditorComponent,\n    BubbleComponent\n  ],\n  exports: [NgxEditorComponent],\n  entryComponents: [BubbleComponent]\n})\n\nexport class NgxEditorModule {\n  static forRoot(config: NgxEditorConfig): ModuleWithProviders<NgxEditorModule> {\n\n    return {\n      ngModule: NgxEditorModule,\n      providers: [\n        {\n          provide: NGX_EDITOR_CONFIG_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NgxEditorServiceConfig,\n          useFactory: provideMyServiceOptions,\n          deps: [NGX_EDITOR_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\nimport { Schema} from 'prosemirror-model';\n\nimport { parseValue } from './parsers';\nimport defaultSchema from './schema';\n\ntype ValidationErrors = Record<string, any>;\n\nfunction isEmptyInputValue(value: any): boolean {\n  // we don't check for string here so it also works with arrays\n  return value == null || value.length === 0;\n}\n\nfunction hasValidLength(value: any): boolean {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  return value != null && typeof value.length === 'number';\n}\n\n\n// @dynamic\nexport class Validators {\n\n  static required(userSchema?: Schema): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n\n      const schema = userSchema || defaultSchema;\n      const doc = parseValue(control.value, schema);\n\n      const isEmpty = doc.childCount === 1\n        && doc?.firstChild?.isTextblock\n        && doc.firstChild.content.size === 0;\n\n      if (!isEmpty) {\n        return null;\n      }\n\n      return {\n        required: true\n      };\n    };\n  }\n\n  static maxLength(maxLength: number, userSchema?: Schema): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const schema = userSchema || defaultSchema;\n      const doc = parseValue(control.value, schema);\n\n      const value = doc.textContent;\n\n      if (hasValidLength(value) && value.length > maxLength) {\n        return {\n          maxlength: {\n            requiredLength: maxLength,\n            actualLength: value.length\n          }\n        };\n      }\n\n      return null;\n    };\n  }\n\n  static minLength(minLength: number, userSchema?: Schema): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n\n      const schema = userSchema || defaultSchema;\n      const doc = parseValue(control.value, schema);\n\n      const value = doc.textContent;\n\n      if (isEmptyInputValue(value) || !hasValidLength(value)) {\n        // don't validate empty values to allow optional controls\n        // don't validate values without `length` property\n        return null;\n      }\n\n      if (value.length < minLength) {\n        return {\n          minlength: {\n            requiredLength: minLength, actualLength: value.length\n          }\n        };\n      }\n\n      return null;\n    };\n  }\n}\n"]}