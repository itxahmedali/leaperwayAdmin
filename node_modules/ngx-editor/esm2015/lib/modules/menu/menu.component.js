import { Component, Input, ViewEncapsulation } from '@angular/core';
import { SharedService } from '../../services/shared/shared.service';
export class MenuComponent {
    constructor(sharedService) {
        this.sharedService = sharedService;
        this.disabled = false;
        this.customMenuRef = null;
        this.simpleCommands = [
            'bold', 'italic',
            'underline', 'strike',
            'code', 'blockquote',
            'ordered_list', 'bullet_list',
            'align_left', 'align_center', 'align_right', 'align_justify'
        ];
        this.iconContainerClass = ['NgxEditor__MenuItem', 'NgxEditor__MenuItem--Icon'];
        this.dropdownContainerClass = ['NgxEditor__Dropdown'];
        this.seperatorClass = ['NgxEditor__Seperator'];
        this.customMenuRefSubscription = this.sharedService.customMenuRefChange.subscribe((ref) => {
            this.customMenuRef = ref;
        });
    }
    isDropDown(item) {
        if (typeof item === 'object') {
            return true;
        }
        return false;
    }
    ngOnDestroy() {
        this.customMenuRefSubscription.unsubscribe();
    }
}
MenuComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-menu',
                template: "<div class=\"NgxEditor__MenuBar\" [ngClass]=\"{'NgxEditor--Disabled': disabled}\">\n\n  <ng-container *ngFor=\"let toolbarItem of toolbar; let lastToolbarItem = last\">\n    <ng-container *ngFor=\"let item of toolbarItem; let lastItem = last\">\n\n      <!-- simple icons -->\n      <ngx-simple-command [name]=\"item\" [class]=\"iconContainerClass\" *ngIf=\"simpleCommands.includes(item)\">\n      </ngx-simple-command>\n\n      <!-- link -->\n      <ngx-link [name]=\"item\" [class]=\"iconContainerClass\" *ngIf=\"item === 'link'\">\n      </ngx-link>\n\n      <!-- image -->\n      <ngx-image [name]=\"item\" [class]=\"iconContainerClass\" *ngIf=\"item === 'image'\">\n      </ngx-image>\n\n      <!-- dropdown -->\n      <ng-container *ngIf=\"isDropDown(item)\">\n        <ng-container *ngFor=\"let dropdown of item | keyvalue\">\n          <ngx-dropdown [class]=\"dropdownContainerClass\" [group]=\"dropdown.key\" [items]=\"dropdown.value\">\n          </ngx-dropdown>\n        </ng-container>\n      </ng-container>\n\n      <!-- text color picker -->\n      <ngx-color-picker [class]=\"iconContainerClass\" *ngIf=\"item === 'text_color'\" type=\"text_color\">\n      </ngx-color-picker>\n      <!-- background color picker -->\n      <ngx-color-picker [class]=\"iconContainerClass\" *ngIf=\"item === 'background_color'\" type=\"background_color\">\n      </ngx-color-picker>\n\n      <!-- seperator -->\n      <div [class]=\"seperatorClass\" *ngIf=\"lastItem && !lastToolbarItem\"></div>\n    </ng-container>\n  </ng-container>\n\n  <!-- custom menu -->\n  <ng-container *ngIf=\"customMenuRef\">\n    <ng-container [ngTemplateOutlet]=\"customMenuRef\"></ng-container>\n  </ng-container>\n\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".NgxEditor__MenuBar{border-bottom:1px solid #ddd;cursor:default;display:flex;height:1.85rem;padding:.2rem}.NgxEditor__MenuItem{align-items:center;border-radius:2px;display:flex;flex-shrink:0;justify-content:center;position:relative}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:1.85rem;transition:.3s ease-in-out;width:1.85rem}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{align-items:center;display:flex;height:100%;justify-content:center;width:100%}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 .3rem}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active{background-color:#e8f0fe}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active.NgxEditor__MenuItem--Text{color:#1a73e8}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active svg{fill:#1a73e8}.NgxEditor__Dropdown{align-items:center;display:flex;flex-shrink:0;min-width:4rem;position:relative}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{align-items:center;display:flex;height:100%;justify-content:center;padding:0 .3rem;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{border-bottom:0;border-left:.25rem solid transparent;border-right:.25rem solid transparent;border-top:.25rem solid;content:\"\";display:inline-block;margin-left:1.5rem;vertical-align:.25rem}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{background-color:#fff;border-radius:4px;box-shadow:0 2px 6px 2px rgba(60,64,67,.15);left:0;position:absolute;top:calc(1.85rem + 2px);width:100%;z-index:10}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{color:inherit;padding:.5rem;white-space:nowrap}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown.NgxEditor__Dropdown--Open,.NgxEditor__Dropdown.NgxEditor__Dropdown--Selected{background-color:#e8f0fe}.NgxEditor__Dropdown.NgxEditor__Dropdown--Open .NgxEditor__Dropdown--Text,.NgxEditor__Dropdown.NgxEditor__Dropdown--Selected .NgxEditor__Dropdown--Text{color:#1a73e8}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__Popup{background-color:#fff;border-radius:4px;box-shadow:0 2px 6px 2px rgba(60,64,67,.15);min-width:12rem;padding:8px;position:absolute;top:calc(1.85rem + 2px);z-index:10}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 .3rem}"]
            },] }
];
MenuComponent.ctorParameters = () => [
    { type: SharedService }
];
MenuComponent.propDecorators = {
    toolbar: [{ type: Input }],
    editorView: [{ type: Input }],
    disabled: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vc3JjLyIsInNvdXJjZXMiOlsibGliL21vZHVsZXMvbWVudS9tZW51LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBMEIsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFNNUYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBU3JFLE1BQU0sT0FBTyxhQUFhO0lBb0J4QixZQUFvQixhQUE0QjtRQUE1QixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQWpCdkMsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUUxQixrQkFBYSxHQUFxQixJQUFJLENBQUM7UUFHdkMsbUJBQWMsR0FBRztZQUNmLE1BQU0sRUFBRSxRQUFRO1lBQ2hCLFdBQVcsRUFBRSxRQUFRO1lBQ3JCLE1BQU0sRUFBRSxZQUFZO1lBQ3BCLGNBQWMsRUFBRSxhQUFhO1lBQzdCLFlBQVksRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUFFLGVBQWU7U0FDN0QsQ0FBQztRQUVGLHVCQUFrQixHQUFHLENBQUMscUJBQXFCLEVBQUUsMkJBQTJCLENBQUMsQ0FBQztRQUMxRSwyQkFBc0IsR0FBRyxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFDakQsbUJBQWMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFHeEMsSUFBSSxDQUFDLHlCQUF5QixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsbUJBQW1CLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7WUFDeEYsSUFBSSxDQUFDLGFBQWEsR0FBRyxHQUFHLENBQUM7UUFDM0IsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsVUFBVSxDQUFDLElBQWlCO1FBQzFCLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUFFO1lBQzVCLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLHlCQUF5QixDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQy9DLENBQUM7OztZQTNDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLFVBQVU7Z0JBQ3BCLG9yREFBb0M7Z0JBRXBDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJOzthQUN0Qzs7O1lBUFEsYUFBYTs7O3NCQVVuQixLQUFLO3lCQUNMLEtBQUs7dUJBQ0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgVGVtcGxhdGVSZWYsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFZGl0b3JWaWV3IH0gZnJvbSAncHJvc2VtaXJyb3Itdmlldyc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgVG9vbGJhckl0ZW0gfSBmcm9tICcuLi8uLi90eXBlcyc7XG5cbmltcG9ydCB7IFNoYXJlZFNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9zaGFyZWQvc2hhcmVkLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZ3gtbWVudScsXG4gIHRlbXBsYXRlVXJsOiAnLi9tZW51LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbWVudS5jb21wb25lbnQuc2NzcyddLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuXG5leHBvcnQgY2xhc3MgTWVudUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gIEBJbnB1dCgpIHRvb2xiYXI6IGFueTtcbiAgQElucHV0KCkgZWRpdG9yVmlldzogRWRpdG9yVmlldztcbiAgQElucHV0KCkgZGlzYWJsZWQgPSBmYWxzZTtcblxuICBjdXN0b21NZW51UmVmOiBUZW1wbGF0ZVJlZjxhbnk+ID0gbnVsbDtcbiAgY3VzdG9tTWVudVJlZlN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gIHNpbXBsZUNvbW1hbmRzID0gW1xuICAgICdib2xkJywgJ2l0YWxpYycsXG4gICAgJ3VuZGVybGluZScsICdzdHJpa2UnLFxuICAgICdjb2RlJywgJ2Jsb2NrcXVvdGUnLFxuICAgICdvcmRlcmVkX2xpc3QnLCAnYnVsbGV0X2xpc3QnLFxuICAgICdhbGlnbl9sZWZ0JywgJ2FsaWduX2NlbnRlcicsICdhbGlnbl9yaWdodCcsICdhbGlnbl9qdXN0aWZ5J1xuICBdO1xuXG4gIGljb25Db250YWluZXJDbGFzcyA9IFsnTmd4RWRpdG9yX19NZW51SXRlbScsICdOZ3hFZGl0b3JfX01lbnVJdGVtLS1JY29uJ107XG4gIGRyb3Bkb3duQ29udGFpbmVyQ2xhc3MgPSBbJ05neEVkaXRvcl9fRHJvcGRvd24nXTtcbiAgc2VwZXJhdG9yQ2xhc3MgPSBbJ05neEVkaXRvcl9fU2VwZXJhdG9yJ107XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBzaGFyZWRTZXJ2aWNlOiBTaGFyZWRTZXJ2aWNlKSB7XG4gICAgdGhpcy5jdXN0b21NZW51UmVmU3Vic2NyaXB0aW9uID0gdGhpcy5zaGFyZWRTZXJ2aWNlLmN1c3RvbU1lbnVSZWZDaGFuZ2Uuc3Vic2NyaWJlKChyZWYpID0+IHtcbiAgICAgIHRoaXMuY3VzdG9tTWVudVJlZiA9IHJlZjtcbiAgICB9KTtcbiAgfVxuXG4gIGlzRHJvcERvd24oaXRlbTogVG9vbGJhckl0ZW0pOiBib29sZWFuIHtcbiAgICBpZiAodHlwZW9mIGl0ZW0gPT09ICdvYmplY3QnKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLmN1c3RvbU1lbnVSZWZTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgfVxufVxuIl19