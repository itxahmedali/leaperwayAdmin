export const removeLink = () => {
    return (state, dispatch) => {
        const { doc, selection, tr } = state;
        const { $head: { pos }, from, to } = selection;
        // if the cursor is on the link without any selection
        if (from === to) {
            const $pos = doc.resolve(pos);
            const linkStart = pos - $pos.textOffset;
            const linkEnd = linkStart + $pos.parent.child($pos.index()).nodeSize;
            tr.removeMark(linkStart, linkEnd);
        }
        else {
            tr.removeMark(from, to);
        }
        if (!tr.docChanged) {
            return false;
        }
        dispatch === null || dispatch === void 0 ? void 0 : dispatch(tr);
        return true;
    };
};
export default removeLink;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3ZlTGluay5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLi9zcmMvY29tbWFuZHMvIiwic291cmNlcyI6WyJyZW1vdmVMaW5rLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxHQUFHLEVBQUU7SUFDN0IsT0FBTyxDQUFDLEtBQWtCLEVBQUUsUUFBb0MsRUFBVyxFQUFFO1FBQzNFLE1BQU0sRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFFLEVBQUUsRUFBRSxHQUFHLEtBQUssQ0FBQztRQUNyQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxHQUFHLFNBQVMsQ0FBQztRQUUvQyxxREFBcUQ7UUFDckQsSUFBSSxJQUFJLEtBQUssRUFBRSxFQUFFO1lBQ2YsTUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUM5QixNQUFNLFNBQVMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztZQUN4QyxNQUFNLE9BQU8sR0FBRyxTQUFTLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDO1lBRXJFLEVBQUUsQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1NBQ25DO2FBQU07WUFDTCxFQUFFLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztTQUN6QjtRQUVELElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFO1lBQ2xCLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFFRCxRQUFRLGFBQVIsUUFBUSx1QkFBUixRQUFRLENBQUcsRUFBRSxFQUFFO1FBQ2YsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixlQUFlLFVBQVUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVkaXRvclN0YXRlLCBUcmFuc2FjdGlvbiB9IGZyb20gJ3Byb3NlbWlycm9yLXN0YXRlJztcblxuZXhwb3J0IGNvbnN0IHJlbW92ZUxpbmsgPSAoKSA9PiB7XG4gIHJldHVybiAoc3RhdGU6IEVkaXRvclN0YXRlLCBkaXNwYXRjaD86ICh0cjogVHJhbnNhY3Rpb24pID0+IHZvaWQpOiBib29sZWFuID0+IHtcbiAgICBjb25zdCB7IGRvYywgc2VsZWN0aW9uLCB0ciB9ID0gc3RhdGU7XG4gICAgY29uc3QgeyAkaGVhZDogeyBwb3MgfSwgZnJvbSwgdG8gfSA9IHNlbGVjdGlvbjtcblxuICAgIC8vIGlmIHRoZSBjdXJzb3IgaXMgb24gdGhlIGxpbmsgd2l0aG91dCBhbnkgc2VsZWN0aW9uXG4gICAgaWYgKGZyb20gPT09IHRvKSB7XG4gICAgICBjb25zdCAkcG9zID0gZG9jLnJlc29sdmUocG9zKTtcbiAgICAgIGNvbnN0IGxpbmtTdGFydCA9IHBvcyAtICRwb3MudGV4dE9mZnNldDtcbiAgICAgIGNvbnN0IGxpbmtFbmQgPSBsaW5rU3RhcnQgKyAkcG9zLnBhcmVudC5jaGlsZCgkcG9zLmluZGV4KCkpLm5vZGVTaXplO1xuXG4gICAgICB0ci5yZW1vdmVNYXJrKGxpbmtTdGFydCwgbGlua0VuZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyLnJlbW92ZU1hcmsoZnJvbSwgdG8pO1xuICAgIH1cblxuICAgIGlmICghdHIuZG9jQ2hhbmdlZCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGRpc3BhdGNoPy4odHIpO1xuICAgIHJldHVybiB0cnVlO1xuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgcmVtb3ZlTGluaztcbiJdfQ==