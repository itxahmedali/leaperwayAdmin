import { ElementRef, OnDestroy, OnInit, EventEmitter, TemplateRef, OnChanges, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { EditorView } from 'prosemirror-view';
import { NgxEditorService } from './editor.service';
import { SharedService } from './services/shared/shared.service';
import { Toolbar } from './types';
export declare class NgxEditorComponent implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {
    private sharedService;
    ngxEditor: ElementRef;
    view: EditorView;
    private onChange;
    private onTouched;
    private config;
    private editorInitialized;
    outputFormat: 'doc' | 'html';
    customMenuRef: TemplateRef<any>;
    placeholder: string;
    editable: boolean;
    init: EventEmitter<EditorView<any>>;
    focusOut: EventEmitter<void>;
    focusIn: EventEmitter<void>;
    constructor(ngxEditorService: NgxEditorService, sharedService: SharedService);
    get toolbar(): Toolbar;
    writeValue(value: Record<string, any> | string | null): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    private updateContent;
    private handleTransactions;
    private createUpdateWatcherPlugin;
    private filterBuiltIns;
    private createEditor;
    private setPlaceholder;
    private updateEditable;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
}
