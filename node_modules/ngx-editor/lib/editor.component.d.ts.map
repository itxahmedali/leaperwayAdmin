{"version":3,"file":"editor.component.d.ts","sources":["editor.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnDestroy, OnInit, EventEmitter, TemplateRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { EditorView } from 'prosemirror-view';\nimport { NgxEditorService } from './editor.service';\nimport { SharedService } from './services/shared/shared.service';\nimport { Toolbar } from './types';\nexport declare class NgxEditorComponent implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\n    private sharedService;\n    ngxEditor: ElementRef;\n    view: EditorView;\n    private onChange;\n    private onTouched;\n    private config;\n    private editorInitialized;\n    outputFormat: 'doc' | 'html';\n    customMenuRef: TemplateRef<any>;\n    placeholder: string;\n    editable: boolean;\n    init: EventEmitter<EditorView<any>>;\n    focusOut: EventEmitter<void>;\n    focusIn: EventEmitter<void>;\n    constructor(ngxEditorService: NgxEditorService, sharedService: SharedService);\n    get toolbar(): Toolbar;\n    writeValue(value: Record<string, any> | string | null): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    private updateContent;\n    private handleTransactions;\n    private createUpdateWatcherPlugin;\n    private filterBuiltIns;\n    private createEditor;\n    private setPlaceholder;\n    private updateEditable;\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n}\n"]}