import { Schema } from 'prosemirror-model';
import { Plugin } from 'prosemirror-state';
import { Menu, NgxEditorConfig, NodeViews } from './types';
import Locals from './Locals';
import * as ɵngcc0 from '@angular/core';
export declare class NgxEditorServiceConfig {
    plugins: Plugin[];
    nodeViews: NodeViews;
    schema: Schema;
    menu: Menu;
    locals: {};
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgxEditorServiceConfig, never>;
}
export declare class NgxEditorService {
    config: NgxEditorServiceConfig;
    constructor(config?: NgxEditorServiceConfig);
    get locals(): Locals;
    get menu(): Menu;
    get colorPresets(): string[][];
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgxEditorService, [{ optional: true; }]>;
}
export declare const provideMyServiceOptions: (config?: NgxEditorConfig) => NgxEditorServiceConfig;

//# sourceMappingURL=editor.service.d.ts.map