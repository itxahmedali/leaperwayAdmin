import { OnDestroy, OnInit } from '@angular/core';
import { EditorView } from 'prosemirror-view';
import { NgxEditorService } from '../../../editor.service';
import { SharedService } from '../../../services/shared/shared.service';
import * as ɵngcc0 from '@angular/core';
export declare class SimpleCommandComponent implements OnInit, OnDestroy {
    private ngxeService;
    private sharedService;
    name: string;
    html: string;
    editorView: EditorView;
    private pluginUpdateSubscription;
    constructor(ngxeService: NgxEditorService, sharedService: SharedService);
    isActive: boolean;
    disabled: boolean;
    toggle(e: MouseEvent): void;
    update: (view: EditorView) => void;
    getTitle(name: string): string;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<SimpleCommandComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<SimpleCommandComponent, "ngx-simple-command", never, { "name": "name"; }, {}, never, never>;
}

//# sourceMappingURL=simple-command.component.d.ts.map